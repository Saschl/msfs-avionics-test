{"version":3,"file":"VerticalSpeedIndicator.js","sourceRoot":"","sources":["../../../pfd/components/VerticalSpeedIndicator.tsx"],"names":[],"mappings":"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","sourcesContent":["import { DisplayComponent, EventBus, FSComponent, Subject, Subscribable, VNode } from 'msfssdk';\r\nimport { Arinc429Word } from '../shared/arinc429';\r\nimport { PFDSimvars } from '../shared/PFDSimvarPublisher';\r\n\r\ninterface VerticalSpeedIndicatorProps {\r\n    bus: EventBus,\r\n}\r\n\r\nexport class VerticalSpeedIndicator extends DisplayComponent<VerticalSpeedIndicatorProps>  {\r\n\r\n\r\n    private verticalSpeedSub = Subject.create(new Arinc429Word(0));\r\n\r\n    private yOffsetSub = Subject.create(0);\r\n    private isAmberSub = Subject.create(-1);\r\n\r\n\r\n    private lastIrVerticalSpeed = new Arinc429Word(0);\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const sub = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        sub.on('vs_inert').whenChanged().handle(ivs => {\r\n            const arinc = new Arinc429Word(ivs);\r\n\r\n            if(arinc.isNormalOperation()) {\r\n                this.verticalSpeedSub.set(arinc);\r\n            }\r\n            this.lastIrVerticalSpeed = arinc;\r\n        });\r\n\r\n        sub.on('vs_baro').whenChanged().handle(ivs => {\r\n            const arinc = new Arinc429Word(ivs);\r\n           // When available, the IR V/S has priority over the ADR barometric V/S.\r\n            if(!this.lastIrVerticalSpeed.isNormalOperation()) {\r\n                this.verticalSpeedSub.set(arinc);\r\n            }\r\n        });\r\n\r\n        this.verticalSpeedSub.sub(vs => {\r\n            const absVSpeed = Math.abs(vs.value);\r\n\r\n            const radioAlt = SimVar.GetSimVarValue('PLANE ALT ABOVE GROUND MINUS CG', 'feet');\r\n\r\n    \r\n            if (absVSpeed > 6000 || (radioAlt < 2500 && radioAlt > 1000 && vs.value < -2000) || (radioAlt < 1000 && vs.value < -1200)) {\r\n                this.isAmberSub.set(1);\r\n            } else {\r\n                this.isAmberSub.set(0);\r\n            }\r\n        \r\n            const sign = Math.sign(vs.value);\r\n        \r\n        \r\n            if (absVSpeed < 1000) {\r\n                this.yOffsetSub.set(vs.value / 1000 * -27.22);\r\n            } else if (absVSpeed < 2000) {\r\n                this.yOffsetSub.set((vs.value - sign * 1000) / 1000 * -10.1 - sign * 27.22);\r\n            } else if (absVSpeed < 6000) {\r\n                this.yOffsetSub.set((vs.value - sign * 2000) / 4000 * -10.1 - sign * 37.32);\r\n            } else {\r\n                this.yOffsetSub.set(sign * -47.37);\r\n            }\r\n        \r\n        })\r\n\r\n    }\r\n\r\n    render(): VNode {\r\n\r\n\r\n  \r\n        return (\r\n            <g>\r\n               {/*  hide when normal ops */}\r\n                <g id='vsfailed'>\r\n                    <path class=\"TapeBackground\" d=\"m151.84 131.72 4.1301-15.623v-70.556l-4.1301-15.623h-5.5404v101.8z\" />\r\n                    <g id=\"VSpeedFailText\">\r\n                        <text class=\"Blink9Seconds FontLargest Red EndAlign\" x=\"153.13206\" y=\"77.501472\">V</text>\r\n                        <text class=\"Blink9Seconds FontLargest Red EndAlign\" x=\"153.13406\" y=\"83.211388\">/</text>\r\n                        <text class=\"Blink9Seconds FontLargest Red EndAlign\" x=\"152.99374\" y=\"88.870819\">S</text>\r\n                    </g>\r\n                </g>\r\n\r\n                <path class=\"TapeBackground\" d=\"m151.84 131.72 4.1301-15.623v-70.556l-4.1301-15.623h-5.5404v101.8z\" />\r\n                <g id=\"VerticalSpeedGroup\">\r\n                    <g class=\"Fill White\">\r\n                        <path d=\"m149.92 54.339v-1.4615h1.9151v1.4615z\" />\r\n                        <path d=\"m149.92 44.26v-1.4615h1.9151v1.4615z\" />\r\n                        <path d=\"m149.92 34.054v-1.2095h1.9151v1.2095z\" />\r\n                        <path d=\"m151.84 107.31h-1.9151v1.4615h1.9151z\" />\r\n                        <path d=\"m151.84 117.39h-1.9151v1.4615h1.9151z\" />\r\n                        <path d=\"m151.84 127.59h-1.9151v1.2095h1.9151z\" />\r\n                    </g>\r\n                    <g class=\"NormalStroke White\">\r\n                        <path d=\"m149.92 67.216h1.7135\" />\r\n                        <path d=\"m151.84 48.569h-1.9151\" />\r\n                        <path d=\"m151.84 38.489h-1.9151\" />\r\n                        <path d=\"m149.92 94.43h1.7135\" />\r\n                        <path d=\"m151.84 113.08h-1.9151\" />\r\n                        <path d=\"m151.84 123.16h-1.9151\" />\r\n                    </g>\r\n                    <g class=\"FontSmallest MiddleAlign Fill White\">\r\n                        <text x=\"148.07108\" y=\"109.72845\">1</text>\r\n                        <text x=\"148.14471\" y=\"119.8801\">2</text>\r\n                        <text x=\"148.07108\" y=\"129.90607\">6</text>\r\n                        <text x=\"148.09711\" y=\"55.316456\">1</text>\r\n                        <text x=\"148.06529\" y=\"45.356102\">2</text>\r\n                        <text x=\"148.11371\" y=\"35.195072\">6</text>\r\n                    </g>\r\n                    <path class=\"Fill Yellow\" d=\"m145.79 80.067h6.0476v1.5119h-6.0476z\" />\r\n                    <VSpeedNeedle isAmber={this.isAmberSub} yOffset={this.yOffsetSub} />\r\n                    \r\n                    <VSpeedText yOffset={this.yOffsetSub} isAmber={this.isAmberSub} VSpeed={this.verticalSpeedSub} />\r\n                </g>\r\n            </g>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nclass VSpeedNeedle extends DisplayComponent<{ yOffset: Subscribable<number>, isAmber: Subscribable<number> }> {\r\n\r\n    private outLineRef = FSComponent.createRef<SVGPathElement>();\r\n    private indicatorRef = FSComponent.createRef<SVGPathElement>();\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        this.props.yOffset.sub(offset => {\r\n            this.outLineRef.instance.setAttribute('d', `m162.74 80.822 l -12 ${offset}`);\r\n            this.indicatorRef.instance.setAttribute('d', `m162.74 80.822 l -12 ${offset}`);\r\n\r\n        })\r\n\r\n        this.props.isAmber.sub(isAmberi => {\r\n            const className = `HugeStroke ${isAmberi === 1 ? 'Amber' : 'Green'}`;\r\n            console.log('le classname '+className);\r\n            this.indicatorRef.instance.setAttribute('class', className);\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render(): VNode | null {\r\n        return (\r\n        \r\n            <>\r\n                <path ref={this.outLineRef} class=\"HugeOutline\" />\r\n                <path ref={this.indicatorRef} id=\"VSpeedIndicator\"  />\r\n            </>\r\n        );\r\n    }\r\n      \r\n  \r\n  \r\n}\r\n\r\nclass VSpeedText extends DisplayComponent<{ VSpeed: Subscribable<Arinc429Word>, yOffset: Subscribable<number>, isAmber: Subscribable<number> }> {\r\n\r\n    private vsTextRef = FSComponent.createRef<SVGTextElement>();\r\n    private groupRef = FSComponent.createRef<SVGGElement>();\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        this.props.VSpeed.sub(vs => {\r\n            const absVSpeed = Math.abs(vs.value);\r\n        \r\n            if (absVSpeed < 200) {\r\n                this.groupRef.instance.setAttribute('visibility', 'hidden');\r\n                return;\r\n            } else {\r\n                this.groupRef.instance.setAttribute('visibility', 'visible');\r\n            }\r\n            const sign = Math.sign(vs.value);\r\n\r\n            const textOffset = this.props.yOffset.get() - sign * 2.4;\r\n\r\n\r\n            const text = (Math.round(absVSpeed / 100) < 10 ? '0' : '') + Math.round(absVSpeed / 100).toString();\r\n            this.vsTextRef.instance.textContent = text;\r\n            this.groupRef.instance.setAttribute('transform', `translate(0 ${textOffset})`);\r\n\r\n        })\r\n\r\n      /*   this.props.yOffset.sub(offset => {\r\n\r\n        }) */\r\n\r\n        this.props.isAmber.sub(isAmber => {\r\n            const className = `FontSmallest MiddleAlign ${isAmber === 1 ? 'Amber' : 'Green'}`;\r\n            this.vsTextRef.instance.setAttribute('class', className);\r\n        })\r\n    }\r\n\r\n    render(): VNode  {\r\n        return (\r\n            <g ref={this.groupRef} id=\"VSpeedTextGroup\">\r\n                <path class=\"BackgroundFill\" d=\"m158.4 83.011h-7.0514v-4.3989h7.0514z\" />\r\n                <text ref={this.vsTextRef} id=\"VSpeedText\" x=\"154.84036\" y=\"82.554581\"></text>\r\n            </g>\r\n        );\r\n    }\r\n\r\n \r\n\r\n\r\n\r\n   \r\n};\r\n"]}