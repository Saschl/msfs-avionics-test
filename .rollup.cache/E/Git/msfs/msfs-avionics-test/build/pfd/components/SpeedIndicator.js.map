{"version":3,"file":"SpeedIndicator.js","sourceRoot":"","sources":["../../../pfd/components/SpeedIndicator.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LagFilter, RateLimiter, SmoothSin, VerticalTape } from './PFDUtils';\r\nimport { DisplayComponent, EventBus, FSComponent, NodeReference, Subject, Subscribable, VNode } from 'msfssdk';\r\nimport { PFDSimvars } from '../shared/PFDSimvarPublisher';\r\nimport { Arinc429Word } from '../shared/arinc429';\r\n\r\nconst ValueSpacing = 10;\r\nconst DistanceSpacing = 10;\r\nconst DisplayRange = 42;\r\n\r\nconst GraduationElement = (speed: number, offset: number) => {\r\n    if (speed < 30) {\r\n        return null;\r\n    }\r\n\r\n    let text = '';\r\n    if (speed % 20 === 0) {\r\n        text = Math.abs(speed).toString().padStart(3, '0');\r\n    }\r\n\r\n    return (\r\n        <g transform={`translate(0 ${offset})`}>\r\n            <path class=\"NormalStroke White\" d=\"m19.031 80.818h-2.8206\" />\r\n            <text class=\"FontMedium MiddleAlign White\" x=\"7.7348943\" y=\"82.936722\">{text}</text>\r\n        </g>\r\n    );\r\n};\r\n\r\nclass V1BugElement extends DisplayComponent<{bus: EventBus}> {\r\n    \r\n\r\n    private offsetSub = Subject.create('');\r\n    private visibilitySub = Subject.create('visible');\r\n\r\n\r\n    private flightPhase = 0;\r\n    private v1Speed = 0;\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const pf = this.props.bus.getSubscriber<PFDSimvars>();\r\n        \r\n        pf.on('v1').whenChanged().handle(g => {\r\n            this.v1Speed = g;\r\n            this.getV1Offset();\r\n            this.getV1Visibility();\r\n\r\n        })\r\n\r\n        pf.on('flightPhase').whenChanged().handle(g => {\r\n            this.flightPhase = this.flightPhase;\r\n            this.getV1Visibility();\r\n        })\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    private getV1Offset(){\r\n\r\n        const offset = -this.v1Speed * DistanceSpacing / ValueSpacing;\r\n        this.offsetSub.set(`translate(0 ${offset})`);\r\n\r\n\r\n    }\r\n\r\n    private getV1Visibility() {\r\n        if(this.flightPhase <= 4 && this.v1Speed !==0) {\r\n            this.visibilitySub.set('visible')\r\n        } else {\r\n            this.visibilitySub.set('hidden')\r\n        }\r\n\r\n    }\r\n\r\n    render(): VNode {\r\n        return (\r\n        <g id=\"V1BugGroup\" transform={this.offsetSub} visibility={this.visibilitySub}>\r\n            <path class=\"NormalStroke Cyan\" d=\"m16.613 80.82h5.4899\" />\r\n            <text class=\"FontLarge MiddleAlign Cyan\" x=\"26.205544\" y=\"82.96\">1</text>\r\n        </g>);\r\n    }\r\n \r\n}\r\n\r\nconst VRBugElement = (offset: number) => (\r\n    <path id=\"RotateSpeedMarker\" class=\"NormalStroke Cyan\" transform={`translate(0 ${offset})`} d=\"m21.549 80.82a1.2592 1.2599 0 1 0-2.5184 0 1.2592 1.2599 0 1 0 2.5184 0z\" />);\r\n\r\nconst GreenDotBugElement = (offset: number) => (\r\n    <g id=\"GreenDotSpeedMarker\" transform={`translate(0 ${offset})`}>\r\n        <path class=\"ThickOutline\" d=\"m20.29 80.85a1.2592 1.2599 0 1 0-2.5184 0 1.2592 1.2599 0 1 0 2.5184 0z\" />\r\n        <path class=\"ThickStroke Green\" d=\"m20.29 80.85a1.2592 1.2599 0 1 0-2.5184 0 1.2592 1.2599 0 1 0 2.5184 0z\" />\r\n    </g>\r\n);\r\n\r\nconst FlapRetractBugElement = (offset: number) => (\r\n    <g id=\"FlapsSlatsBug\" transform={`translate(0 ${offset})`}>\r\n        <path class=\"NormalStroke Green\" d=\"m19.031 80.82h3.8279\" />\r\n        <text class=\"FontLarge MiddleAlign Green\" x=\"27.236509\" y=\"83.327988\">F</text>\r\n    </g>\r\n);\r\n\r\nconst SlatRetractBugElement = (offset: number) => (\r\n    <g id=\"FlapsSlatsBug\" transform={`translate(0 ${offset})`}>\r\n        <path class=\"NormalStroke Green\" d=\"m19.031 80.82h3.8279\" />\r\n        <text class=\"FontLarge MiddleAlign Green\" x=\"27.236509\" y=\"83.327988\">S</text>\r\n    </g>\r\n);\r\n\r\nconst VFENextBugElement = (offset: number) => (\r\n    <path id=\"VFeNextMarker\" transform={`translate(0 ${offset})`} class=\"NormalStroke Amber\" d=\"m19.031 81.34h-2.8709m0-1.0079h2.8709\" />\r\n);\r\n/* \r\nconst VAlphaProtBar = (offset: number) => (\r\n    <path transform={`translate(0 ${offset})`} class=\"BarAmber\" d=\"m21.952 82.254v1.5119m-0.94654-2.923h0.94654v1.4111h-2.9213v-1.4111z\" />);\r\n */\r\nconst VMaxBar = (offset: number) => (\r\n    <path transform={`translate(0 ${offset})`} class=\"BarRed\" d=\"m22.053 78.381v-2.6206m-3.022 5.0397h3.022v-2.4191h-3.022z\" />\r\n);\r\n\r\nconst VProtBug = (offset: number) => (\r\n    <g id=\"SpeedProtSymbol\" transform={`translate(0 ${offset})`}>\r\n        <path class=\"NormalOutline\" d=\"m13.994 81.289h3.022m-3.022-1.0079h3.022\" />\r\n        <path class=\"NormalStroke Green\" d=\"m13.994 81.289h3.022m-3.022-1.0079h3.022\" />\r\n        <path style={{ display: 'none' }} class=\"NormalStroke Amber\" d=\"m14.615 79.915 1.7808 1.7818m-1.7808 0 1.7808-1.7818\" />\r\n    </g>\r\n);\r\n\r\ninterface AirspeedIndicatorProps {\r\n    airspeedAcc?: number;\r\n    FWCFlightPhase?: number;\r\n    altitude?: Arinc429Word;\r\n    VLs?: number;\r\n    VMax?: number;\r\n    showBars?: boolean;\r\n    bus: EventBus;\r\n    instrument: BaseInstrument;\r\n}\r\n\r\nexport class AirspeedIndicator extends DisplayComponent<AirspeedIndicatorProps> {\r\n\r\n\r\n    private speedSub = Subject.create<number>(0);\r\n\r\n\r\n\r\n    private speedTapeOutlineRef: NodeReference<SVGPathElement> = FSComponent.createRef();\r\n    private alphaProtRef: NodeReference<SVGGElement>[] = [];\r\n\r\n    private lastAlphaProtSub = Subject.create(0);\r\n\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const pf = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        pf.on('speed').handle(a => {\r\n            this.speedSub.set(a);\r\n\r\n            const airSpeed = new Arinc429Word(a);\r\n\r\n            const length = 42.9 + Math.max(Math.max(Math.min(airSpeed.value, 72.1), 30) - 30, 0);\r\n            this.speedTapeOutlineRef.instance.setAttribute('d', `m19.031 38.086v${length}`)\r\n        })\r\n\r\n        pf.on('alpha_prot').handle(a => {\r\n\r\n              // ALPHA PROT -> SUB ON ALPHA PROT\r\n        /* if (showBars) {\r\n            bugs.push(...BarberpoleIndicator(new Arinc429Word(this.speedSub.get()), a, false, DisplayRange, VAlphaProtBar, 2.923));\r\n        } */\r\n    \r\n        this.alphaProtRef.forEach((el, index) => {\r\n            const elementValue = a + -1 * 2.923 * index;\r\n            const offset = -elementValue * DistanceSpacing / ValueSpacing;\r\n            el.instance.setAttribute('transform', `translate(0 ${offset})`)\r\n        });\r\n\r\n        this.lastAlphaProtSub.set(a);\r\n\r\n    })\r\n\r\n    // showBars replacement\r\n    pf.on('onGround').whenChanged().handle(g => {\r\n        if(g === 1) {\r\n            this.alphaProtRef.forEach(el => {\r\n                el.instance.setAttribute('visibility', 'hidden')\r\n            })\r\n        } else {\r\n            setTimeout(() => {\r\n                this.alphaProtRef.forEach(el => {\r\n                    el.instance.setAttribute('visibility', 'visible')\r\n                })\r\n            },10000)\r\n        }\r\n      \r\n    })\r\n\r\n    }\r\n\r\n    private createAlphaProtBarberPole() {\r\n\r\n        let i = 0;\r\n        const group: SVGGElement[] = [];\r\n        for(i; i < 8; i++) {\r\n            const apref = FSComponent.createRef<SVGGElement>();\r\n            group.push(<g id=\"alpha-prot\" ref={apref}>\r\n                <path class=\"BarAmber\" d=\"m21.952 82.254v1.5119m-0.94654-2.923h0.94654v1.4111h-2.9213v-1.4111z\" />);\r\n            </g> );   \r\n            this.alphaProtRef.push(apref);\r\n\r\n        }\r\n        return group;\r\n\r\n    }\r\n\r\n      \r\n\r\n    render(): VNode  {\r\n           \r\n  /*   if (Number.isNaN(airspeed)) {\r\n        return (\r\n            <>\r\n                <path id=\"SpeedTapeBackground\" class=\"TapeBackground\" d=\"m1.9058 123.56v-85.473h17.125v85.473z\" />\r\n                <text id=\"SpeedFailText\" class=\"Blink9Seconds FontLargest EndAlign Red\" x=\"17.756115\" y=\"83.386398\">SPD</text>\r\n                <SpeedTapeOutline airspeed={100} isRed />\r\n            </>\r\n        );\r\n        \r\n        } */\r\n    const length = 42.9 + Math.max(Math.max(Math.min(this.speedSub.get(), 72.1), 30) - 30, 0);\r\n    return (\r\n       \r\n        <g id=\"SpeedTapeElementsGroup\">\r\n            <path id=\"SpeedTapeBackground\" class=\"TapeBackground\" d=\"m1.9058 123.56v-85.473h17.125v85.473z\" />\r\n            {/* Outline */}\r\n            <path id=\"SpeedTapeOutlineRight\" ref={this.speedTapeOutlineRef} class='NormalStroke White' d={`m19.031 38.086v${length}`} />\r\n            <VerticalTape\r\n                tapeValue={this.speedSub}\r\n                bugs={[]}\r\n                lowerLimit={30}\r\n                upperLimit={660}\r\n                valueSpacing={ValueSpacing}\r\n                displayRange={DisplayRange + 6}\r\n                distanceSpacing={DistanceSpacing}\r\n                type='speed'\r\n            >\r\n\r\n            {this.createAlphaProtBarberPole()}\r\n            <V1BugElement bus={this.props.bus}/>\r\n            \r\n            </VerticalTape>\r\n            <SpeedTrendArrow airspeed={this.speedSub} instrument={this.props.instrument} />\r\n            <VLsBar airspeed={this.speedSub} VAlphaProt={this.lastAlphaProtSub} />\r\n            <VAlphaLimBar airspeed={this.speedSub} />\r\n          \r\n\r\n          {/*   {FWCFlightPhase <= 4\r\n            && <V1Offtape airspeed={clampedSpeed} v1={v1} />}\r\n            {showBars\r\n                && (\r\n                    <>\r\n                        <VLsBar airspeed={airspeed} VLs={VLs} VAlphaProt={ValphaProtection} />\r\n                        <VAlphaLimBar airspeed={airspeed} VAlphalim={ValphaMax} />\r\n                    </>\r\n                )} */}\r\n        </g>\r\n    );\r\n    }\r\n}\r\n\r\nexport class AirspeedIndicatorOfftape extends DisplayComponent<{ bus: EventBus }> {\r\n\r\n    private lowerRef = FSComponent.createRef<SVGGElement>();\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const subscriber = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        subscriber.on('speed').whenChanged().handle(s => {\r\n\r\n            const newVal = new Arinc429Word(s);\r\n\r\n            if (Number.isNaN(newVal.value)) {\r\n\r\n                // DOES NOT WORK PROEPRLY AS IT WOULD ADD AN ELEMENT EACH TIME\r\n             /*    FSComponent.render(\r\n                    <>\r\n                        <path id=\"SpeedTapeOutlineUpper\" class=\"NormalStroke Red\" d=\"m1.9058 38.086h21.859\" />\r\n                        <path id=\"SpeedTapeOutlineLower\" class=\"NormalStroke Red\" d=\"m1.9058 123.56h21.859\" />\r\n                    </>\r\n                ,this.lowerRef.instance); */\r\n            } else {\r\n\r\n                const clampedSpeed = Math.max(Math.min(newVal.value, 660), 30);\r\n                const showLower = clampedSpeed > 72;\r\n\r\n                if(showLower) {\r\n                    this.lowerRef.instance.setAttribute('visibility', 'visible');\r\n                } else {\r\n                    this.lowerRef.instance.setAttribute('visibility', 'hidden');\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render(): VNode {\r\n\r\n       \r\n    \r\n       // const clampedTargetSpeed = Math.max(Math.min(targetSpeed, 660), 30);\r\n        return (\r\n            <g id=\"SpeedOfftapeGroup\">\r\n                <path id=\"SpeedTapeOutlineUpper\" class=\"NormalStroke White\" d=\"m1.9058 38.086h21.859\" />\r\n               {/*  <SpeedTarget airspeed={clampedSpeed} targetSpeed={clampedTargetSpeed} isManaged={speedIsManaged} /> */}\r\n                <path class=\"Fill Yellow SmallOutline\" d=\"m13.994 80.46v0.7257h6.5478l3.1228 1.1491v-3.0238l-3.1228 1.1491z\" />\r\n                <path class=\"Fill Yellow SmallOutline\" d=\"m0.092604 81.185v-0.7257h2.0147v0.7257z\" />\r\n                <path id=\"SpeedTapeOutlineLower\" ref={this.lowerRef} class=\"NormalStroke White\" d=\"m1.9058 123.56h21.859\" /> \r\n            </g>\r\n        );\r\n       \r\n    }\r\n\r\n    \r\n}\r\n\r\nclass SpeedTrendArrow extends DisplayComponent<{ airspeed: Subscribable<number>, instrument: BaseInstrument }> {\r\n\r\n    private refElement = FSComponent.createRef<SVGGElement>();\r\n    private arrowBaseRef = FSComponent.createRef<SVGPathElement>();\r\n    private arrowHeadRef = FSComponent.createRef<SVGPathElement>();\r\n\r\n\r\n    private offset = Subject.create<string>('');\r\n    private pathString = Subject.create<string>('');\r\n\r\n\r\n    private lagFilter = new LagFilter(1.2);\r\n\r\n    private airspeedAccRateLimiter = new RateLimiter(1.2, -1.2);\r\n\r\n    private previousAirspeed = 0;\r\n\r\n    private previousTime = (new Date() as any).appTime();\r\n\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n     \r\n\r\n        this.props.airspeed.sub(a => {\r\n\r\n            const currentTime = (new Date() as any).appTime();\r\n            const deltaTime = this.props.instrument.deltaTime;// (currentTime - this.previousTime);\r\n            \r\n\r\n            const newValue = new Arinc429Word(a);\r\n            const clamped = newValue.isNormalOperation() ? Math.max(newValue.value, 30) : NaN;\r\n            const airspeedAcc = (clamped - this.previousAirspeed) / deltaTime * 1000;\r\n            this.previousAirspeed = clamped;\r\n\r\n\r\n    \r\n            const rateLimitedAirspeedAcc = this.airspeedAccRateLimiter.step(airspeedAcc, deltaTime / 1000);\r\n            const filteredAirspeedAcc = this.lagFilter.step(rateLimitedAirspeedAcc, deltaTime / 1000);\r\n            //const airspeedAcc = this.lagFilter.step(newValue.value, deltaTime);\r\n            //console.log(filteredAirspeedAcc);\r\n            const targetSpeed = filteredAirspeedAcc * 10;\r\n            const sign = Math.sign(filteredAirspeedAcc);\r\n\r\n            const offset = -targetSpeed * DistanceSpacing / ValueSpacing;\r\n\r\n            let pathString;\r\n            const neutralPos = 80.823;\r\n            if (sign > 0) {\r\n                pathString = `m15.455 ${neutralPos + offset} l -1.2531 2.4607 M15.455 ${neutralPos + offset} l 1.2531 2.4607`;\r\n            } else {\r\n                pathString = `m15.455 ${neutralPos + offset} l 1.2531 -2.4607 M15.455 ${neutralPos + offset} l -1.2531 -2.4607`;\r\n            }\r\n\r\n            this.offset.set(`m15.455 80.823v${offset.toFixed(10)}`);\r\n\r\n            this.pathString.set(pathString);\r\n\r\n        \r\n            if (Math.abs(targetSpeed) < 1) {\r\n                this.refElement.instance.setAttribute('visibility', 'hidden');\r\n               // this.arrowBaseRef.instance.setAttribute('d', `m15.455 80.823v${offset}`)\r\n               // this.arrowHeadRef.instance.setAttribute('d', pathString)\r\n\r\n            } else {\r\n                this.refElement.instance.setAttribute('visibility', 'visible');\r\n            }\r\n\r\n            this.previousTime = currentTime;\r\n\r\n        })\r\n        \r\n    }\r\n\r\n    render(): VNode | null {\r\n       \r\n            return (\r\n                <g id=\"SpeedTrendArrow\" ref={this.refElement}>\r\n                    <path id=\"SpeedTrendArrowBase\" ref={this.arrowBaseRef} class=\"NormalStroke Yellow\" d={this.offset} />\r\n                    <path id=\"SpeedTrendArrowHead\" ref={this.arrowHeadRef} class=\"NormalStroke Yellow\" d={this.pathString} />\r\n                </g>\r\n            );\r\n    }\r\n}\r\n\r\nclass VLsBar extends DisplayComponent<{ VAlphaProt:Subscribable<number>, airspeed: Subscribable<number> }>  {\r\n\r\n    private previousTime = (new Date() as any).appTime();\r\n\r\n    private lastVls = 0;\r\n\r\n    private vlsPath = Subject.create<string>('');\r\n\r\n    private lastVAlphaProt: number = 0;\r\n\r\n    private lastAirSpeed: Arinc429Word = new Arinc429Word(0);\r\n\r\n    private smoothSpeeds = (vlsDestination: number) => {\r\n        const currentTime = (new Date() as any).appTime();\r\n        const deltaTime = currentTime - this.previousTime;\r\n\r\n        const seconds = deltaTime / 1000;\r\n        this.lastVls =  SmoothSin(this.lastVls, vlsDestination, 0.5, seconds);\r\n        return this.lastVls;\r\n    };\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n\r\n        \r\n\r\n        this.props.VAlphaProt.sub(alpha => {\r\n            this.lastVAlphaProt = alpha;\r\n\r\n            const airSpeed = this.lastAirSpeed;\r\n\r\n            const VLs = this.smoothSpeeds(SimVar.GetSimVarValue('L:A32NX_SPEEDS_VLS', 'number'));\r\n\r\n\r\n            const VLsPos = (airSpeed.value - VLs) * DistanceSpacing / ValueSpacing + 80.818;\r\n            const offset = (VLs - this.lastVAlphaProt) * DistanceSpacing / ValueSpacing;\r\n\r\n            this.vlsPath.set(`m19.031 ${VLsPos}h 1.9748v${offset}`);\r\n        })\r\n\r\n        this.props.airspeed.sub(s => {\r\n\r\n        \r\n            const airSpeed = new Arinc429Word(s);\r\n\r\n            this.lastAirSpeed = airSpeed;\r\n\r\n            const VLs = this.smoothSpeeds(SimVar.GetSimVarValue('L:A32NX_SPEEDS_VLS', 'number'));\r\n\r\n\r\n            const VLsPos = (airSpeed.value - VLs) * DistanceSpacing / ValueSpacing + 80.818;\r\n            const offset = (VLs - this.lastVAlphaProt) * DistanceSpacing / ValueSpacing;\r\n\r\n            this.vlsPath.set(`m19.031 ${VLsPos}h 1.9748v${offset}`);\r\n        })\r\n\r\n\r\n    /*     if (VLs - airspeed < -DisplayRange) {\r\n            return null;\r\n        }\r\n     */\r\n        \r\n    }\r\n    \r\n    render(): VNode {\r\n    \r\n        return (\r\n            <path id=\"VLsIndicator\" class=\"NormalStroke Amber\" d={this.vlsPath} />\r\n        );\r\n    }\r\n   \r\n};\r\n\r\n\r\n class VAlphaLimBar extends DisplayComponent<{ airspeed: Subscribable<number> }> {\r\n\r\n    private offsetPath = Subject.create<string>('');\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        this.props.airspeed.sub(s => {\r\n            const airSpeed = new Arinc429Word(s);\r\n            const VAlphalim = SimVar.GetSimVarValue('L:A32NX_SPEEDS_ALPHA_MAX', 'number');\r\n\r\n            if (VAlphalim - airSpeed.value < -DisplayRange) {\r\n                return null;\r\n            }\r\n        \r\n            const delta = airSpeed.value - DisplayRange - VAlphalim;\r\n            const offset = delta * DistanceSpacing / ValueSpacing;\r\n\r\n            this.offsetPath.set(`m19.031 123.56h3.425v${offset}h-3.425z`);\r\n        })\r\n    }\r\n\r\n    render(): VNode {\r\n\r\n    \r\n\r\n        return (\r\n            <path id=\"VAlimIndicator\" class=\"Fill Red\" d={this.offsetPath} />\r\n        );\r\n\r\n\r\n    }\r\n\r\n  \r\n\r\n   \r\n}\r\n\r\n\r\n/* const SpeedTarget = ({ airspeed, targetSpeed, isManaged }) => {\r\n    const color = isManaged ? 'Magenta' : 'Cyan';\r\n    const text = Math.round(targetSpeed).toString().padStart(3, '0');\r\n    if (airspeed - targetSpeed > DisplayRange) {\r\n        return (\r\n            <text id=\"SelectedSpeedLowerText\" class={`FontSmallest EndAlign ${color}`} x=\"23.994415\" y=\"128.3132\">{text}</text>\r\n        );\r\n    } if (airspeed - targetSpeed < -DisplayRange) {\r\n        return (\r\n            <text id=\"SelectedSpeedLowerText\" class={`FontSmallest EndAlign ${color}`} x=\"23.994289\" y=\"36.750431\">{text}</text>\r\n        );\r\n    }\r\n    const offset = (airspeed - targetSpeed) * DistanceSpacing / ValueSpacing;\r\n    return (\r\n        <path class={`NormalStroke ${color} CornerRound`} transform={`translate(0 ${offset})`} d=\"m19.274 81.895 5.3577 1.9512v-6.0476l-5.3577 1.9512\" />\r\n    );\r\n}; */\r\n   /*  private createBugs(): [] {\r\n           \r\n    const ValphaMax = getSimVar('L:A32NX_SPEEDS_ALPHA_MAX', 'number');\r\n\r\n    const bugs: [(offset: number) => JSX.Element, number][] = [];\r\n\r\n\r\n    //VMAX\r\n    bugs.push(...BarberpoleIndicator(airspeed, VMax, true, DisplayRange, VMaxBar, 5.040));\r\n\r\n\r\n    //VPROT\r\n    const showVProt = VMax > 240;\r\n    if (showVProt) {\r\n        bugs.push([VProtBug, VMax + 6]);\r\n    }\r\n\r\n    const clampedSpeed = Math.max(Math.min(airspeed, 660), 30);\r\n\r\n    const flapsHandleIndex = getSimVar('L:A32NX_FLAPS_HANDLE_INDEX', 'Number');\r\n\r\n    let v1 = NaN;\r\n    if (FWCFlightPhase <= 4) {\r\n        //V1 -> GET FLIGHT PHASE IN SUB\r\n        v1 = getSimVar('L:AIRLINER_V1_SPEED', 'knots');\r\n        if (v1 !== 0) {\r\n            bugs.push([V1BugElement, Math.max(Math.min(v1, 660), 30)]);\r\n        }\r\n\r\n        //VR -> GET FLIGHT PHASE IN SUB\r\n        const vr = getSimVar('L:AIRLINER_VR_SPEED', 'knots');\r\n        if (vr !== 0) {\r\n            bugs.push([VRBugElement, Math.max(Math.min(vr, 660), 30)]);\r\n        }\r\n    }\r\n\r\n    // SUB ON FLAPSHANDLEINDEX\r\n    if (flapsHandleIndex === 0) {\r\n        const GreenDotSpeed = getSimVar('L:A32NX_SPEEDS_GD', 'number');\r\n        bugs.push([GreenDotBugElement, GreenDotSpeed]);\r\n    } else if (flapsHandleIndex === 1) {\r\n        const SlatRetractSpeed = getSimVar('L:A32NX_SPEEDS_S', 'number');\r\n        bugs.push([SlatRetractBugElement, SlatRetractSpeed]);\r\n    } else if (flapsHandleIndex === 2 || flapsHandleIndex === 3) {\r\n        const FlapRetractSpeed = getSimVar('L:A32NX_SPEEDS_F', 'number');\r\n        bugs.push([FlapRetractBugElement, FlapRetractSpeed]);\r\n    }\r\n\r\n    // IDK maybe sub on altitude\r\n    if (altitude.isNormalOperation() && altitude.value < 15000 && flapsHandleIndex < 4) {\r\n        const VFENext = getSimVar('L:A32NX_SPEEDS_VFEN', 'number');\r\n        bugs.push([VFENextBugElement, VFENext]);\r\n    } \r\n    return bugs;\r\n\r\n} */\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\ninterface MachNumberProps {\r\n    mach: Arinc429Word,\r\n}\r\n\r\nexport const MachNumber = ({ mach }: MachNumberProps) => {\r\n    const machPermille = Math.round(mach.valueOr(0) * 1000);\r\n    const [showMach, setShowMach] = useState(machPermille > 500);\r\n\r\n    useEffect(() => {\r\n        if (showMach && machPermille < 450) {\r\n            setShowMach(false);\r\n        }\r\n        if (!showMach && machPermille > 500) {\r\n            setShowMach(true);\r\n        }\r\n    }, [showMach, machPermille]);\r\n\r\n    if (!mach.isNormalOperation()) {\r\n        return (\r\n            <text id=\"MachFailText\" class=\"Blink9Seconds FontLargest StartAlign Red\" x=\"5.4257932\" y=\"136.88908\">MACH</text>\r\n        );\r\n    }\r\n\r\n    if (!showMach) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <text id=\"CurrentMachText\" class=\"FontLargest StartAlign Green\" x=\"5.4257932\" y=\"136.88908\">{`.${machPermille}`}</text>\r\n    );\r\n};\r\n\r\nconst V1Offtape = ({ airspeed, v1 }) => {\r\n    if (v1 - airspeed > DisplayRange) {\r\n        return (\r\n            <text id=\"V1SpeedText\" class=\"FontTiny Cyan\" x=\"21.144159\" y=\"43.103134\">{Math.round(v1)}</text>\r\n        );\r\n    }\r\n    return null;\r\n};\r\n\r\n// Needs filtering, not going to use until then\r\n */\r\n"]}