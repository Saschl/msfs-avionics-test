{"version":3,"file":"horizon.js","sourceRoot":"","sources":["../../../pfd/components/horizon.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Arinc429Word } from '../shared/arinc429';\r\n\r\nimport {\r\n    calculateHorizonOffsetFromPitch,\r\n    calculateVerticalOffsetFromRoll,\r\n    HorizontalTape,\r\n    LagFilter,\r\n} from './PFDUtils';\r\nimport { DisplayComponent, EventBus, FSComponent, Subject, Subscribable, VNode } from 'msfssdk';\r\nimport { PFDSimvars, PFDVars } from '../shared/PFDSimvarPublisher';\r\n\r\nconst DisplayRange = 35;\r\nconst DistanceSpacing = 15;\r\nconst ValueSpacing = 10;\r\n\r\nclass TickFunction extends DisplayComponent<{offset: number}> {\r\n\r\n    render(): VNode | null {\r\n        return (<path transform={`translate(${this.props.offset} 0)`} className=\"NormalStroke White\" d=\"m68.906 80.823v1.8\" />)\r\n    }\r\n\r\n}\r\n\r\nexport class HeadingBug  extends DisplayComponent<{offset: number}> {\r\n\r\n    render(): VNode | null { \r\n        return(\r\n        <g id=\"HorizonHeadingBug\" transform={`translate(${this.props.offset} 0)`}>\r\n        <path className=\"ThickOutline\" d=\"m68.906 80.823v-9.0213\" />\r\n        <path className=\"ThickStroke Cyan\" d=\"m68.906 80.823v-9.0213\" />\r\n    </g>)\r\n    }\r\n   \r\n}\r\n\r\ninterface HorizonProps {\r\n    bus: EventBus;\r\n    instrument: BaseInstrument;\r\n    heading: Arinc429Word;\r\n    isOnGround: boolean;\r\n    radioAlt: number;\r\n    decisionHeight: number;\r\n    selectedHeading: number;\r\n    FDActive: boolean;\r\n    isAttExcessive: boolean;\r\n}\r\n\r\n\r\n\r\n\r\nexport class Horizon extends DisplayComponent<HorizonProps> {\r\n\r\n    private pitchGroupRef = FSComponent.createRef<SVGGElement>();\r\n    private rollGroupRef = FSComponent.createRef<SVGGElement>();\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const pf = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        pf.on('pitch').handle(pitch => {\r\n\r\n            const newVal = new Arinc429Word(pitch);\r\n            //console.log(newVal.value);\r\n            this.pitchGroupRef.instance.setAttribute('transform',`translate(0 ${calculateHorizonOffsetFromPitch(-newVal.value)})`)\r\n        });\r\n\r\n        pf.on('roll').handle(roll => {\r\n            const newVal = new Arinc429Word(roll);\r\n          \r\n            this.rollGroupRef.instance.setAttribute('transform',`rotate(${newVal.value} 68.814 80.730)`)\r\n        })\r\n\r\n    }\r\n\r\n    render(): VNode {\r\n  /*       if (!this.props.pitch.get().isNormalOperation() || !this.props.roll.isNormalOperation()) {\r\n            return <></>;\r\n        }\r\n     */\r\n      /*   const yOffset = Math.max(Math.min(calculateHorizonOffsetFromPitch(-this.props.pitch.value), 31.563), -31.563); */\r\n    \r\n        const bugs: [number][] = [];\r\n        if (!Number.isNaN(this.props.selectedHeading) && !this.props.FDActive) {\r\n            bugs.push([this.props.selectedHeading]);\r\n        }\r\n    \r\n        return (\r\n            <g id=\"RollGroup\" ref={this.rollGroupRef}>\r\n                <g id=\"PitchGroup\" ref={this.pitchGroupRef}>\r\n                    <path d=\"m23.906 80.823v-160h90v160z\" class=\"SkyFill\" />\r\n                    <path d=\"m113.91 223.82h-90v-143h90z\" class=\"EarthFill\" />\r\n    \r\n                    {/* If you're wondering why some paths have an \"h0\" appended, it's to work around a\r\n                rendering bug in webkit, where paths with only one line is rendered blurry. */}\r\n    \r\n                    <g class=\"NormalStroke White\">\r\n                        <path d=\"m66.406 85.323h5h0\" />\r\n                        <path d=\"m64.406 89.823h9h0\" />\r\n                        <path d=\"m66.406 94.073h5h0\" />\r\n                        <path d=\"m59.406 97.823h19h0\" />\r\n                        <path d=\"m64.406 103.82h9h0\" />\r\n                        <path d=\"m59.406 108.82h19h0\" />\r\n                        <path d=\"m55.906 118.82h26h0\" />\r\n                        <path d=\"m52.906 138.82h32h0\" />\r\n                        <path d=\"m47.906 168.82h42h0\" />\r\n                        <path d=\"m66.406 76.323h5h0\" />\r\n                        <path d=\"m64.406 71.823h9h0\" />\r\n                        <path d=\"m66.406 67.323h5h0\" />\r\n                        <path d=\"m59.406 62.823h19h0\" />\r\n                        <path d=\"m66.406 58.323h5h0\" />\r\n                        <path d=\"m64.406 53.823h9h0\" />\r\n                        <path d=\"m66.406 49.323h5h0\" />\r\n                        <path d=\"m59.406 44.823h19h0\" />\r\n                        <path d=\"m66.406 40.573h5h0\" />\r\n                        <path d=\"m64.406 36.823h9h0\" />\r\n                        <path d=\"m66.406 33.573h5h0\" />\r\n                        <path d=\"m55.906 30.823h26h0\" />\r\n                        <path d=\"m52.906 10.823h32h0\" />\r\n                        <path d=\"m47.906-19.177h42h0\" />\r\n                    </g>\r\n    \r\n                    <g id=\"PitchProtUpper\" class=\"NormalStroke Green\">\r\n                        <path d=\"m51.506 31.523h4m-4-1.4h4\" />\r\n                        <path d=\"m86.306 31.523h-4m4-1.4h-4\" />\r\n                    </g>\r\n                    <g id=\"PitchProtLostUpper\" style=\"display: none\" class=\"NormalStroke Amber\">\r\n                        <path d=\"m52.699 30.116 1.4142 1.4142m-1.4142 0 1.4142-1.4142\" />\r\n                        <path d=\"m85.114 31.53-1.4142-1.4142m1.4142 0-1.4142 1.4142\" />\r\n                    </g>\r\n                    <g id=\"PitchProtLower\" class=\"NormalStroke Green\">\r\n                        <path d=\"m59.946 104.52h4m-4-1.4h4\" />\r\n                        <path d=\"m77.867 104.52h-4m4-1.4h-4\" />\r\n                    </g>\r\n                    <g id=\"PitchProtLostLower\" style=\"display: none\" class=\"NormalStroke Amber\">\r\n                        <path d=\"m61.199 103.12 1.4142 1.4142m-1.4142 0 1.4142-1.4142\" />\r\n                        <path d=\"m76.614 104.53-1.4142-1.4142m1.4142 0-1.4142 1.4142\" />\r\n                    </g>\r\n    \r\n                    <path d=\"m68.906 121.82-8.0829 14h2.8868l5.1962-9 5.1962 9h2.8868z\" class=\"NormalStroke Red\" />\r\n                    <path d=\"m57.359 163.82 11.547-20 11.547 20h-4.0414l-7.5056-13-7.5056 13z\" class=\"NormalStroke Red\" />\r\n                    <path d=\"m71.906 185.32v3.5h15l-18-18-18 18h15v-3.5h-6.5l9.5-9.5 9.5 9.5z\" class=\"NormalStroke Red\" />\r\n                    <path d=\"m60.824 13.823h2.8868l5.1962 9 5.1962-9h2.8868l-8.0829 14z\" class=\"NormalStroke Red\" />\r\n                    <path d=\"m61.401-13.177h-4.0414l11.547 20 11.547-20h-4.0414l-7.5056 13z\" class=\"NormalStroke Red\" />\r\n                    <path d=\"m68.906-26.177-9.5-9.5h6.5v-3.5h-15l18 18 18-18h-15v3.5h6.5z\" class=\"NormalStroke Red\" />\r\n    \r\n                  {/*   <TailstrikeIndicator /> */}\r\n    \r\n                    <path d=\"m23.906 80.823h90h0\" class=\"NormalOutline\" />\r\n                    <path d=\"m23.906 80.823h90h0\" class=\"NormalStroke White\" />\r\n    \r\n                    <g class=\"FontSmall White Fill EndAlign\">\r\n                        <text x=\"55.729935\" y=\"64.812828\">10</text>\r\n                        <text x=\"88.618317\" y=\"64.812714\">10</text>\r\n                        <text x=\"54.710766\" y=\"46.931034\">20</text>\r\n                        <text x=\"89.564583\" y=\"46.930969\">20</text>\r\n                        <text x=\"50.867237\" y=\"32.910896\">30</text>\r\n                        <text x=\"93.408119\" y=\"32.910839\">30</text>\r\n                        <text x=\"48.308414\" y=\"12.690886\">50</text>\r\n                        <text x=\"96.054962\" y=\"12.690853\">50</text>\r\n                        <text x=\"43.050652\" y=\"-17.138285\">80</text>\r\n                        <text x=\"101.48304\" y=\"-17.138248\">80</text>\r\n                        <text x=\"55.781109\" y=\"99.81395\">10</text>\r\n                        <text x=\"88.669487\" y=\"99.813919\">10</text>\r\n                        <text x=\"54.645519\" y=\"110.8641\">20</text>\r\n                        <text x=\"89.892426\" y=\"110.86408\">20</text>\r\n                        <text x=\"51.001217\" y=\"120.96314\">30</text>\r\n                        <text x=\"93.280037\" y=\"120.96311\">30</text>\r\n                        <text x=\"48.220913\" y=\"140.69778\">50</text>\r\n                        <text x=\"96.090324\" y=\"140.69786\">50</text>\r\n                        <text x=\"43.125065\" y=\"170.80962\">80</text>\r\n                        <text x=\"101.38947\" y=\"170.80959\">80</text>\r\n                    </g>\r\n                </g>\r\n                <path d=\"m40.952 49.249v-20.562h55.908v20.562z\" class=\"NormalOutline SkyFill\" />\r\n                <path d=\"m40.952 49.249v-20.562h55.908v20.562z\" class=\"NormalStroke White\" />\r\n                <SideslipIndicator bus={this.props.bus} instrument={this.props.instrument} />\r\n                <RisingGround bus={this.props.bus} /> \r\n             {/*    {this.props.heading.isNormalOperation()\r\n                && (\r\n                    <HorizontalTape\r\n                        //graduationElementFunction={TickFunction}\r\n                        bugs={bugs}\r\n                        yOffset={yOffset}\r\n                        displayRange={DisplayRange}\r\n                        distanceSpacing={DistanceSpacing}\r\n                        valueSpacing={ValueSpacing}\r\n                        heading={this.props.heading}\r\n                    />\r\n                )} */}\r\n{/*                 {!this.props.isAttExcessive&&  */}\r\n                 <RadioAltAndDH bus={this.props.bus} />\r\n {/*                <FlightPathVector />\r\n                {!this.props.isAttExcessive\r\n                && <FlightPathDirector FDActive={this.props.FDActive} />} */}\r\n            </g>\r\n        );\r\n    }\r\n\r\n\r\n  \r\n}\r\n/* \r\nconst FlightPathVector = () => {\r\n    if (!getSimVar('L:A32NX_TRK_FPA_MODE_ACTIVE', 'bool')) {\r\n        return null;\r\n    }\r\n\r\n    const roll = getSimVar('PLANE BANK DEGREES', 'degrees');\r\n    const pitch = -getSimVar('PLANE PITCH DEGREES', 'degrees');\r\n    const AOA = getSimVar('INCIDENCE ALPHA', 'degrees');\r\n    const FPA = pitch - (Math.cos(roll * Math.PI / 180) * AOA);\r\n    const DA = getSmallestAngle(getSimVar('GPS GROUND TRUE TRACK', 'degrees'), getSimVar('GPS GROUND TRUE HEADING', 'degrees'));\r\n\r\n    const xOffset = Math.max(Math.min(DA, 21), -21) * DistanceSpacing / ValueSpacing;\r\n    const yOffset = calculateHorizonOffsetFromPitch(pitch) - calculateHorizonOffsetFromPitch(FPA);\r\n\r\n    return (\r\n        <g transform={`translate(${xOffset} ${yOffset})`}>\r\n            <svg x=\"53.4\" y=\"65.3\" width=\"31px\" height=\"31px\" version=\"1.1\" viewBox=\"0 0 31 31\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g transform={`rotate(${-roll} 15.5 15.5)`}>\r\n                    <path\r\n                        className=\"NormalOutline\"\r\n                        // eslint-disable-next-line max-len\r\n                        d=\"m17.766 15.501c8.59e-4 -1.2531-1.0142-2.2694-2.2665-2.2694-1.2524 0-2.2674 1.0163-2.2665 2.2694-8.57e-4 1.2531 1.0142 2.2694 2.2665 2.2694 1.2524 0 2.2674-1.0163 2.2665-2.2694z\"\r\n                    />\r\n                    <path className=\"ThickOutline\" d=\"m17.766 15.501h5.0367m-9.5698 0h-5.0367m7.3033-2.2678v-2.5199\" />\r\n                    <path\r\n                        className=\"NormalStroke Green\"\r\n                        // eslint-disable-next-line max-len\r\n                        d=\"m17.766 15.501c8.59e-4 -1.2531-1.0142-2.2694-2.2665-2.2694-1.2524 0-2.2674 1.0163-2.2665 2.2694-8.57e-4 1.2531 1.0142 2.2694 2.2665 2.2694 1.2524 0 2.2674-1.0163 2.2665-2.2694z\"\r\n                    />\r\n                    <path className=\"ThickStroke Green\" d=\"m17.766 15.501h5.0367m-9.5698 0h-5.0367m7.3033-2.2678v-2.5199\" />\r\n                </g>\r\n            </svg>\r\n        </g>\r\n    );\r\n};\r\n\r\nconst FlightPathDirector = ({ FDActive }) => {\r\n    if (!FDActive || !getSimVar('L:A32NX_TRK_FPA_MODE_ACTIVE', 'bool')) {\r\n        return null;\r\n    }\r\n\r\n    const lateralAPMode = getSimVar('L:A32NX_FMA_LATERAL_MODE', 'number');\r\n    const verticalAPMode = getSimVar('L:A32NX_FMA_VERTICAL_MODE', 'enum');\r\n    const showLateralFD = lateralAPMode !== 0 && lateralAPMode !== 34 && lateralAPMode !== 40;\r\n    const showVerticalFD = verticalAPMode !== 0 && verticalAPMode !== 34;\r\n\r\n    if (!showVerticalFD && !showLateralFD) {\r\n        return null;\r\n    }\r\n\r\n    const FDRollOrder = getSimVar('L:A32NX_FLIGHT_DIRECTOR_BANK', 'number');\r\n    const currentRoll = getSimVar('PLANE BANK DEGREES', 'degrees');\r\n    const FDRollOffset = (FDRollOrder - currentRoll) * 0.77;\r\n\r\n    const DA = getSmallestAngle(getSimVar('GPS GROUND TRUE TRACK', 'degrees'), getSimVar('GPS GROUND TRUE HEADING', 'degrees'));\r\n\r\n    const xOffset = Math.max(Math.min(DA, 21), -21) * DistanceSpacing / ValueSpacing;\r\n\r\n    const FDPitchOrder = getSimVar('L:A32NX_FLIGHT_DIRECTOR_PITCH', 'number');\r\n    const currentPitch = -getSimVar('PLANE PITCH DEGREES', 'degrees');\r\n    const AOA = getSimVar('INCIDENCE ALPHA', 'degrees');\r\n    const FPA = currentPitch - (Math.cos(currentRoll * Math.PI / 180) * AOA);\r\n\r\n    const yOffset = calculateHorizonOffsetFromPitch(currentPitch) - calculateHorizonOffsetFromPitch(FPA) + (FDPitchOrder) * 0.44;\r\n\r\n    return (\r\n        <g transform={`translate(${xOffset} ${yOffset})`}>\r\n            <svg x=\"53.4\" y=\"65.3\" width=\"31px\" height=\"31px\" version=\"1.1\" viewBox=\"0 0 31 31\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g transform={`rotate(${FDRollOffset} 15.5 15.5)`} className=\"CornerRound\">\r\n                    <path\r\n                        className=\"NormalOutline\"\r\n                        // eslint-disable-next-line max-len\r\n                        d=\"m16.507 15.501a1.0074 1.008 0 1 0-2.0147 0 1.0074 1.008 0 1 0 2.0147 0zm7.5551 0 6.5478-1.5119v3.0238l-6.5478-1.5119m-17.125 0-6.5478-1.5119v3.0238l6.5478-1.5119h17.125\"\r\n                    />\r\n                    <path\r\n                        className=\"NormalStroke Green\"\r\n                        // eslint-disable-next-line max-len\r\n                        d=\"m16.507 15.501a1.0074 1.008 0 1 0-2.0147 0 1.0074 1.008 0 1 0 2.0147 0zm7.5551 0 6.5478-1.5119v3.0238l-6.5478-1.5119m-17.125 0-6.5478-1.5119v3.0238l6.5478-1.5119h17.125\"\r\n                    />\r\n                </g>\r\n            </svg>\r\n        </g>\r\n    );\r\n};\r\n\r\nconst TailstrikeIndicator = () => {\r\n    // should also not be displayed when thrust levers are at or above FLX/MCT, but I don't know if there is a simvar\r\n    // for that\r\n    if (getSimVar('PLANE ALT ABOVE GROUND MINUS CG', 'feet') > 400\r\n        || getSimVar('AIRSPEED INDICATED', 'knots') < 50\r\n        || getSimVar('L:A32NX_AUTOTHRUST_TLA:1', 'number') >= 35\r\n        || getSimVar('L:A32NX_AUTOTHRUST_TLA:2', 'number') >= 35) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <path id=\"TailstrikeWarning\" d=\"m72.682 50.223h2.9368l-6.7128 8-6.7128-8h2.9368l3.7759 4.5z\" className=\"NormalStroke Amber\" />\r\n    );\r\n};\r\n*/\r\ninterface RadioAltAndDHProps {\r\n    radioAlt: number;\r\n    decisionHeight: number;\r\n    roll: Arinc429Word;\r\n}\r\n\r\nclass RadioAltAndDH extends DisplayComponent<{ bus: EventBus }> {\r\n\r\n    private visibilitySub = Subject.create('visible');\r\n    private offsetSub = Subject.create('');\r\n    private radioAltClassSub  = Subject.create('');\r\n    private dhClassSub  = Subject.create('');\r\n    private dhVisibilitySub = Subject.create('hidden');\r\n\r\n    private textSub = Subject.create('');\r\n\r\n    private roll = new Arinc429Word(0);\r\n    private dh = 0;\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const sub = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        sub.on('roll').handle(r => {\r\n            const roll = new Arinc429Word(r);\r\n            this.roll = roll;\r\n        }) \r\n\r\n        \r\n        sub.on('dh').handle(dh => {\r\n            this.dh = dh;\r\n        }) \r\n\r\n\r\n\r\n        sub.on('radio_alt').handle(ra => {\r\n\r\n            if(ra > 2500){\r\n                this.visibilitySub.set('hidden');\r\n            } else {\r\n                this.visibilitySub.set('visible');\r\n\r\n                const verticalOffset = calculateVerticalOffsetFromRoll(this.roll.value);\r\n\r\n\r\n                this.offsetSub.set(`translate(0 ${-verticalOffset})`);\r\n\r\n                const size = (ra > 400 ? 'FontLarge' : 'FontLargest');\r\n                const DHValid = this.dh >= 0;\r\n                const color = (ra > 400 || (ra > this.dh + 100 && DHValid) ? 'Green' : 'Amber');\r\n\r\n                this.radioAltClassSub.set(`${size} ${color} MiddleAlign`);\r\n        \r\n                let text = '';\r\n        \r\n                if (ra < 5) {\r\n                    text = Math.round(ra).toString();\r\n                } else if (ra <= 50) {\r\n                    text = (Math.round(ra / 5) * 5).toString();\r\n                } else if (ra > 50 || (ra > this.dh + 100 && DHValid)) {\r\n                    text = (Math.round(ra / 10) * 10).toString();\r\n                }\r\n                this.textSub.set(text);\r\n\r\n                if(ra <= this.dh) {\r\n                    this.dhClassSub.set('FontLargest Amber EndAlign Blink9Seconds');\r\n                    this.dhVisibilitySub.set('visible');\r\n                } else {\r\n                    this.dhClassSub.set('FontLargest Amber EndAlign');\r\n                    this.dhVisibilitySub.set('hidden');\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render(): VNode  {\r\n       \r\n        \r\n    \r\n            return (\r\n                <g visibility={this.visibilitySub} id=\"DHAndRAGroup\" transform={this.offsetSub}>\r\n                    <text id=\"AttDHText\" x=\"73.511879\" y=\"113.19068\" visibility={this.dhVisibilitySub} class={this.dhClassSub}>DH</text>\r\n                    <text id=\"RadioAlt\" x=\"68.803764\" y=\"119.88165\" class={this.radioAltClassSub}>{this.textSub}</text>\r\n                </g>\r\n            );\r\n        \r\n    }\r\n   \r\n};\r\n\r\n\r\ninterface SideslipIndicatorProps {\r\n    bus: EventBus;\r\n    instrument: BaseInstrument;\r\n}\r\n\r\nclass SideslipIndicator extends DisplayComponent<SideslipIndicatorProps>  {\r\n\r\n    private sideslipIndicatorFilter = new LagFilter(0.8);\r\n\r\n    private classNameSub = Subject.create('Yellow');\r\n\r\n    private rollTriangleSub = Subject.create('');\r\n    private slideSlipSub = Subject.create('');\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const sub = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        sub.on('roll').whenChanged().handle(r => {\r\n            const roll = new Arinc429Word(r);\r\n            const verticalOffset = calculateVerticalOffsetFromRoll(roll.value);\r\n            const isOnGround = SimVar.GetSimVarValue('SIM ON GROUND', 'number');\r\n            let offset = 0;\r\n            if (isOnGround) {\r\n                // on ground, lateral g is indicated. max 0.3g, max deflection is 15mm\r\n                const latAcc = SimVar.GetSimVarValue('ACCELERATION BODY X', 'G Force');\r\n                const accInG = Math.min(0.3, Math.max(-0.3, latAcc));\r\n                offset = -accInG * 15 / 0.3;\r\n            } else {\r\n                const beta = SimVar.GetSimVarValue('INCIDENCE BETA', 'degrees');\r\n                const betaTarget = SimVar.GetSimVarValue('L:A32NX_BETA_TARGET', 'Number');\r\n                offset = Math.max(Math.min(beta - betaTarget, 15), -15);\r\n            }\r\n    \r\n            const betaTargetActive = SimVar.GetSimVarValue('L:A32NX_BETA_TARGET_ACTIVE', 'Number') === 1;\r\n            const SIIndexOffset = this.sideslipIndicatorFilter.step(offset, this.props.instrument.deltaTime / 1000);\r\n\r\n            this.rollTriangleSub.set(`translate(0 ${verticalOffset})`);\r\n            this.classNameSub.set(`${betaTargetActive ? 'Cyan' : 'Yellow'}`);\r\n            this.slideSlipSub.set(`translate(${SIIndexOffset} 0)`);\r\n\r\n\r\n        });\r\n    \r\n    }\r\n    render(): VNode {\r\n\r\n\r\n        return (\r\n            <g id=\"RollTriangleGroup\" transform={this.rollTriangleSub} class=\"NormalStroke Yellow CornerRound\">\r\n                <path d=\"m66.074 43.983 2.8604-4.2333 2.8604 4.2333z\" />\r\n                <path\r\n                    id=\"SideSlipIndicator\"\r\n                    transform={this.slideSlipSub}\r\n                    d=\"m73.974 47.208-1.4983-2.2175h-7.0828l-1.4983 2.2175z\"\r\n                />\r\n            </g>\r\n        );\r\n    }\r\n\r\n \r\n};\r\n\r\n\r\n\r\nclass RisingGround extends DisplayComponent<{ bus: EventBus }> {\r\n\r\n    private lastRadioAlt = 0;\r\n    private lastPitch = new Arinc429Word(0);\r\n\r\n    private transformStringSub = Subject.create('');\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const sub = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        sub.on('pitch').whenChanged().handle(p => {\r\n\r\n            const pitch = new Arinc429Word(p);\r\n            this.lastPitch = pitch;\r\n\r\n            const targetPitch = -0.1 * this.lastRadioAlt;\r\n\r\n            const targetOffset = Math.max(Math.min(calculateHorizonOffsetFromPitch((-pitch.value) - targetPitch) - 31.563, 0), -63.093);\r\n            this.transformStringSub.set(`translate(0 ${targetOffset})`);\r\n        });\r\n\r\n        sub.on('radio_alt').whenChanged().handle(p => {\r\n\r\n            const radio_alt = p;\r\n            this.lastRadioAlt = radio_alt;\r\n\r\n            const targetPitch = -0.1 * radio_alt;\r\n\r\n            const targetOffset = Math.max(Math.min(calculateHorizonOffsetFromPitch((-this.lastPitch.value) - targetPitch) - 31.563, 0), -63.093);\r\n            this.transformStringSub.set(`translate(0 ${targetOffset})`);\r\n        });\r\n\r\n    }\r\n\r\n    render(): VNode {\r\n\r\n      \r\n    \r\n        return (\r\n            <g id=\"HorizonGroundRectangle\" transform={this.transformStringSub}>\r\n                <path d=\"m113.95 157.74h-90.08v-45.357h90.08z\" class=\"NormalOutline EarthFill\" />\r\n                <path d=\"m113.95 157.74h-90.08v-45.357h90.08z\" class=\"NormalStroke White\" />\r\n            </g>\r\n        );\r\n    }\r\n  \r\n}; \r\n\r\n"]}