{"version":3,"file":"DigitalAltitudeReadout.js","sourceRoot":"","sources":["../../../pfd/components/DigitalAltitudeReadout.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAY,WAAW,EAAiB,OAAO,EAAuB,MAAM,SAAS,CAAC;AAC/G,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAGlD,MAAM,UAAU,GAAG,CAAC,KAAa,EAAE,EAAE;IACjC,IAAI,IAAY,CAAC;IACjB,IAAI,KAAK,GAAG,CAAC,EAAE;QACX,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;KACnC;SAAM,IAAI,KAAK,IAAI,GAAG,EAAE;QACrB,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;KAClD;SAAM;QACH,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;KAC1C;IAED,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,CAAC,KAAa,EAAE,EAAE;IACpC,IAAI,IAAY,CAAC;IACjB,IAAI,KAAK,GAAG,CAAC,EAAE;QACX,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;KACjC;SAAM,IAAI,KAAK,IAAI,EAAE,EAAE;QACpB,IAAI,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;KAClC;SAAM;QACH,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;KAC3B;IAED,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,cAAc,GAAG,CAAC,KAAa,EAAE,EAAE;IACrC,IAAI,IAAY,CAAC;IACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACtB,IAAI,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;KAClC;SAAM;QACH,IAAI,GAAG,EAAE,CAAC;KACb;IAED,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,iBAAiB,GAAG,CAAC,KAAa,EAAE,EAAE;IACxC,IAAI,IAAY,CAAC;IACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACtB,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;KAC3B;SAAM;QACH,IAAI,GAAG,EAAE,CAAC;KACb;IACD,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAMF,MAAM,OAAO,sBAAuB,SAAQ,gBAA6C;IAAzF;;QAEY,QAAG,GAAG,CAAC,CAAC;QACR,kBAAa,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;QACxC,aAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;QAC7B,gBAAW,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEpC,iBAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjC,kBAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClC,qBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAGrC,mBAAc,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACnC,sBAAiB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEtC,sBAAiB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACtC,yBAAoB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAuHrD,CAAC;IAlHG,aAAa,CAAC,IAAW;QACrB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAE1B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,EAAc,CAAC;QAEvD,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACrC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAG5C,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;YAErC,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE1D,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;YAChF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEzB,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1E,MAAM,UAAU,GAAG,MAAM,GAAG,GAAG,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAElC,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YACtD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YACtC,IAAI,gBAAgB,GAAG,CAAC,CAAC;YACzB,IAAI,UAAU,GAAG,EAAE,EAAE;gBACjB,gBAAgB,GAAG,UAAU,GAAG,EAAE,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;aAC/C;iBAAM;gBACH,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAChC;YAED,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YACxC,IAAI,iBAAiB,GAAG,CAAC,CAAC;YAC1B,IAAI,aAAa,IAAI,CAAC,EAAE;gBACpB,iBAAiB,GAAG,gBAAgB,CAAC;gBACrC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;aACjD;iBAAM;gBACH,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACjC;YAED,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;YAC5D,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC9C,IAAI,oBAAoB,GAAG,CAAC,CAAC;YAC7B,IAAI,cAAc,IAAI,CAAC,EAAE;gBACrB,oBAAoB,GAAG,iBAAiB,CAAC;aAC5C;YAED,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YACpD,MAAM,iBAAiB,GAAG,iBAAiB,KAAK,CAAC,CAAC;YAElD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAExC,CAAC,CAAC,CAAA;IAGN,CAAC;IAED,MAAM;QAGF,OAAO,CACH,kCAAG,EAAE,EAAC,iBAAiB;YACnB;gBACI,oCAAK,CAAC,EAAC,SAAS,EAAC,CAAC,EAAC,SAAS,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC,QAAQ,EAAC,OAAO,EAAC,iBAAiB;oBAC/E,2BAAC,IAAI,IACD,IAAI,EAAG,eAAe,EACtB,QAAQ,EAAE,IAAI,CAAC,oBAAoB,EACnC,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAC7B,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,QAAQ,EAAE,IAAI,CAAC,WAAW,EAC1B,OAAO,EAAE,iBAAiB,EAC1B,YAAY,EAAE,CAAC,EACf,eAAe,EAAE,CAAC,EAClB,YAAY,EAAE,CAAC,EACf,MAAM,EAAE,CAAC,GACX;oBACF,2BAAC,IAAI,IACD,IAAI,EAAC,WAAW,EAChB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAChC,KAAK,EAAE,IAAI,CAAC,cAAc,EAC1B,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,QAAQ,EAAE,IAAI,CAAC,WAAW,EAC1B,OAAO,EAAE,cAAc,EACvB,YAAY,EAAE,CAAC,EACf,eAAe,EAAE,CAAC,EAClB,YAAY,EAAE,CAAC,EACf,MAAM,EAAE,CAAC,GAEX;oBACF,2BAAC,IAAI,IAAC,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,CAAC,EAAE,eAAe,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,GAAG,CAC7N;gBACN,oCAAK,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,SAAS,EAAC,KAAK,EAAC,QAAQ,EAAC,MAAM,EAAC,QAAQ,EAAC,OAAO,EAAC,mBAAmB;oBAClF,2BAAC,IAAI,IAAC,IAAI,EAAC,MAAM,EAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,EAAE,EAAE,eAAe,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE,GAAI;4CAEhN,CACX;YACJ,qCAAM,EAAE,EAAC,6BAA6B,EAAC,KAAK,EAAC,oBAAoB,EAAC,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,EAAC,6CAA6C,GAAG;YAChJ,qCAAM,EAAE,EAAC,mBAAmB,EAAC,KAAK,EAAC,qBAAqB,EAAC,CAAC,EAAC,mEAAmE,GAAG;YAEzH,kCAAG,EAAE,EAAC,iBAAiB,EAAC,KAAK,EAAC,oBAAoB,EAAC,UAAU,EAAE,IAAI,CAAC,aAAa;gBAC7E,qCAAM,KAAK,EAAC,OAAO,EAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,WAAW,QAAS;gBACxD,qCAAM,KAAK,EAAC,OAAO,EAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,WAAW,QAAS;gBACxD,qCAAM,KAAK,EAAC,OAAO,EAAC,CAAC,EAAC,WAAW,EAAC,CAAC,EAAC,WAAW,QAAS,CACxD,CAEZ,CACP,CAAC;IAGV,CAAC;CACA;AAED,MAAM,IAAK,SAAQ,gBAA8P;IAAjR;;QAGY,qBAAgB,GAAoC,EAAE,CAAC;QAEvD,YAAO,GAAG,CAAC,CAAC;QA+HZ,aAAQ,GAAG,CAAC,CAAC;QACb,UAAK,GAAG,CAAC,CAAC;QACV,UAAK,GAAG,OAAO,CAAA;QACf,aAAQ,GAAG,IAAI,CAAC;QAEhB,SAAI,GAAG,WAAW,CAAC,SAAS,EAAe,CAAC;IA8CxD,CAAC;IA/KW,aAAa,CAAC,MAAc;QAEhC,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAEhI,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAG1H,MAAM,kBAAkB,GAAqB,EAAE,CAAC;QAIhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7B,MAAM,eAAe,GAAG,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACtE,MAAM,MAAM,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAEvF,IAAI,UAAU,GAAG,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAC5D,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,UAAU,KAAK,CAAC,EAAE;gBACpC,UAAU,GAAG,GAAG,CAAC;aACpB;YAEA,sFAAsF;YAEtF,MAAM,QAAQ,GAAG,WAAW,CAAC,SAAS,EAAkB,CAAC;YAE1D,IAAG,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC/B,kBAAkB,CAAC,IAAI,CAAC,qCAAM,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,MAAM,GAAG,EAAE,KAAK,EAAE,2BAA2B,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,KAAK,GAAQ,CAAC,CAAC;aAEjK;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;gBACxC,kBAAkB,CAAC,IAAI,CAAE,qCAAM,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,MAAM,GAAG,EAAE,KAAK,EAAE,2BAA2B,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC,KAAK,GAAQ,CAAC,CAAC;aAChK;iBAEI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,eAAe,EAAE;gBAC1C,kBAAkB,CAAC,IAAI,CAAE,qCAAM,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,MAAM,GAAG,EAAE,KAAK,EAAE,2BAA2B,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,KAAK,GAAQ,CAAC,CAAC;aACjK;iBACI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;gBACjC,kBAAkB,CAAC,IAAI,CAAE,qCAAM,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,eAAe,MAAM,GAAG,EAAE,KAAK,EAAE,4BAA4B,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,QAAQ,GAAQ,CAAC,CAAC;aACtK;YACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxC;QAED,OAAO,kBAAkB,CAAC;IAG9B,CAAC;IAGF;;;;;;;;;;;;;;SAcK;IAEI,SAAS,CAAC,QAAgB;QAE9B,MAAM,SAAS,GAAE,eAAe,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC;QAEnG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAE5D,CAAC;IAEO,WAAW;QAGf,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAChI,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;YAC3D,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;SAC9C;QAGD,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC1H,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;YACrD,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;SAC3C;QAGD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAExC,IAAI,UAAU,GAAG,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAC5D,MAAM,eAAe,GAAG,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACtE,MAAM,MAAM,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACvF,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,UAAU,KAAK,CAAC,EAAE;gBACpC,UAAU,GAAG,GAAG,CAAC;aACpB;YAGD,IAAI,IAAI,CAAC;YAIT,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAExC;;;;;;;;kBAQM;YAIJ,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,eAAe,MAAM,GAAG,CAAC,CAAC;YACtF,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;YACrD,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACzE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAE5E;IAGL,CAAC;IAUD,aAAa,CAAC,IAAW;QACrB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAI1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YACnB,oBAAoB;YACpB,qBAAqB;YACrB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClB,qBAAqB;QAExB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,gCAAgC;QAKpC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAErB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAExB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QAIN,OAAO,CACH,kCAAG,GAAG,EAAE,IAAI,CAAC,IAAI,IACb,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CACrC,CACP,CAAC;IACF,CAAC;CAGJ;AAAA,CAAC","sourcesContent":["import { DisplayComponent, EventBus, FSComponent, NodeReference, Subject, Subscribable, VNode } from 'msfssdk';\r\nimport { Arinc429Word } from '../shared/arinc429';\r\nimport { PFDSimvars } from '../shared/PFDSimvarPublisher';\r\n\r\nconst TensDigits = (value: number) => {\r\n    let text: string;\r\n    if (value < 0) {\r\n        text = (value + 100).toString();\r\n    } else if (value >= 100) {\r\n        text = (value - 100).toString().padEnd(2, '0');\r\n    } else {\r\n        text = value.toString().padEnd(2, '0');\r\n    }\r\n\r\n    return text;\r\n};\r\n\r\nconst HundredsDigit = (value: number) => {\r\n    let text: string;\r\n    if (value < 0) {\r\n        text = (value + 1).toString();\r\n    } else if (value >= 10) {\r\n        text = (value - 10).toString();\r\n    } else {\r\n        text = value.toString();\r\n    }\r\n\r\n    return text;\r\n};\r\nconst ThousandsDigit = (value: number) => {\r\n    let text: string;\r\n    if (!Number.isNaN(value)) {\r\n        text = (value % 10).toString();\r\n    } else {\r\n        text = '';\r\n    }\r\n  \r\n    return text;\r\n};\r\nconst TenThousandsDigit = (value: number) => {\r\n    let text: string;\r\n    if (!Number.isNaN(value)) {\r\n        text = value.toString();\r\n    } else {\r\n        text = '';\r\n    }\r\n    return text;\r\n};\r\n\r\ninterface DigitalAltitudeReadoutProps {\r\n    bus: EventBus;\r\n}\r\n\r\nexport class DigitalAltitudeReadout extends DisplayComponent<DigitalAltitudeReadoutProps>  {\r\n\r\n    private mda = 0;\r\n    private isNegativeSub = Subject.create('hidden')\r\n    private colorSub = Subject.create('')\r\n    private showZeroSub = Subject.create(false);\r\n\r\n    private tenDigitsSub = Subject.create(0);\r\n\r\n    private hundredsValue = Subject.create(0);\r\n    private hundredsPosition = Subject.create(0);\r\n\r\n\r\n    private thousandsValue = Subject.create(0);\r\n    private thousandsPosition = Subject.create(0);\r\n\r\n    private tenThousandsValue = Subject.create(0);\r\n    private tenThousandsPosition = Subject.create(0);\r\n\r\n\r\n\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n\r\n        const sub = this.props.bus.getSubscriber<PFDSimvars>();\r\n\r\n        sub.on('mda').whenChanged().handle(mda => {\r\n            this.mda = mda;\r\n        });\r\n\r\n        sub.on('altitude').whenChanged().handle(a => {\r\n\r\n\r\n        const altitude = new Arinc429Word(a);\r\n            \r\n        const isNegative = altitude.value < 0;\r\n        this.isNegativeSub.set(isNegative ? 'visible' : 'hidden');\r\n\r\n        const color = (this.mda !== 0 && altitude.value < this.mda) ? 'Amber' : 'Green';\r\n        this.colorSub.set(color);\r\n    \r\n        const absAlt = Math.abs(Math.max(Math.min(altitude.value, 50000), -1500));\r\n        const tensDigits = absAlt % 100;\r\n        this.tenDigitsSub.set(tensDigits);\r\n    \r\n        const HundredsValue = Math.floor((absAlt / 100) % 10);\r\n        this.hundredsValue.set(HundredsValue);\r\n        let HundredsPosition = 0;\r\n        if (tensDigits > 80) {\r\n            HundredsPosition = tensDigits / 20 - 4;\r\n            this.hundredsPosition.set(HundredsPosition);\r\n        } else {\r\n            this.hundredsPosition.set(0);\r\n        }\r\n    \r\n        const ThousandsValue = Math.floor((absAlt / 1000) % 10);\r\n        this.thousandsValue.set(ThousandsValue);\r\n        let ThousandsPosition = 0;\r\n        if (HundredsValue >= 9) {\r\n            ThousandsPosition = HundredsPosition;\r\n            this.thousandsPosition.set(ThousandsPosition);\r\n        } else {\r\n            this.thousandsPosition.set(0);\r\n        }\r\n    \r\n        const TenThousandsValue = Math.floor((absAlt / 10000) % 10);\r\n        this.tenThousandsValue.set(TenThousandsValue);\r\n        let TenThousandsPosition = 0;\r\n        if (ThousandsValue >= 9) {\r\n            TenThousandsPosition = ThousandsPosition;\r\n        }\r\n    \r\n        this.tenThousandsPosition.set(TenThousandsPosition);\r\n        const showThousandsZero = TenThousandsValue !== 0;\r\n\r\n        this.showZeroSub.set(showThousandsZero);\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render(): VNode  {\r\n     \r\n    \r\n        return (\r\n            <g id=\"AltReadoutGroup\">\r\n                <g>\r\n                    <svg x=\"117.754\" y=\"76.3374\" width=\"13.5\" height=\"8.9706\" viewBox=\"0 0 13.5 8.9706\">\r\n                        <Drum\r\n                            type = 'ten-thousands'\r\n                            position={this.tenThousandsPosition}\r\n                            value={this.tenThousandsValue}\r\n                            color={this.colorSub}\r\n                            showZero={this.showZeroSub}\r\n                            getText={TenThousandsDigit}\r\n                            valueSpacing={1}\r\n                            distanceSpacing={7}\r\n                            displayRange={1}\r\n                            amount={2}\r\n                        />\r\n                        <Drum\r\n                            type='thousands'\r\n                            position={this.thousandsPosition}\r\n                            value={this.thousandsValue}\r\n                            color={this.colorSub}\r\n                            showZero={this.showZeroSub}\r\n                            getText={ThousandsDigit}\r\n                            valueSpacing={1}\r\n                            distanceSpacing={7}\r\n                            displayRange={1}\r\n                            amount={2}\r\n\r\n                        />\r\n                        <Drum type='hundreds' showZero={this.showZeroSub} position={this.hundredsPosition} value={this.hundredsValue} color={this.colorSub} getText={HundredsDigit} valueSpacing={1} distanceSpacing={7} displayRange={1} amount={10}/>\r\n                    </svg>\r\n                    <svg x=\"130.85\" y=\"73.6664\" width=\"8.8647\" height=\"14.313\" viewBox=\"0 0 8.8647 14.313\">\r\n                        <Drum type='tens' amount={4} showZero={this.showZeroSub} position={this.tenDigitsSub} value={this.tenDigitsSub} color={this.colorSub} getText={TensDigits} valueSpacing={20} distanceSpacing={4.7} displayRange={40} />\r\n{/*                         <Drum type='tens' amount={5} showZero={this.showZeroSub} position={this.tenDigitsSub.map(s => s-4)} value={this.tenDigitsSub} color={this.colorSub} getText={TensDigits} valueSpacing={20} distanceSpacing={4.7} displayRange={40} />\r\n */}                     </svg>\r\n                </g>\r\n                <path id=\"AltReadoutReducedAccurMarks\" class=\"NormalStroke Amber\" style={{ display: 'none' }} d=\"m132.61 81.669h4.7345m-4.7345-1.6933h4.7345\" />\r\n                <path id=\"AltReadoutOutline\" class=\"NormalStroke Yellow\" d=\"m117.75 76.337h13.096v-2.671h8.8647v14.313h-8.8647v-2.671h-13.096\" />\r\n              \r\n                        <g id=\"AltNegativeText\" class=\"FontLarge EndAlign\" visibility={this.isNegativeSub}>\r\n                            <text class=\"White\" x=\"121.46731\" y=\"78.156288\">N</text>\r\n                            <text class=\"White\" x=\"121.49069\" y=\"83.301224\">E</text>\r\n                            <text class=\"White\" x=\"121.46731\" y=\"88.446159\">G</text>\r\n                        </g>\r\n                     \r\n            </g>\r\n        );\r\n        \r\n   \r\n}\r\n}\r\n\r\nclass Drum extends DisplayComponent<{ type: string, displayRange:number , valueSpacing: number, distanceSpacing:number , position: Subscribable<number>, value: Subscribable<number>, color:Subscribable<string> , getText: any, showZero: Subscribable<boolean>, amount:number}>  {\r\n\r\n\r\n    private digitRefElements: NodeReference<SVGTextElement>[] = [];\r\n\r\n    private visible = 1;\r\n\r\n\r\n    private buildElements(amount: number) {\r\n\r\n        let highestPosition = Math.round((this.position + this.props.displayRange) / this.props.valueSpacing) * this.props.valueSpacing;\r\n\r\n        let highestValue = Math.round((this.value + this.props.displayRange) / this.props.valueSpacing) * this.props.valueSpacing;\r\n\r\n\r\n        const graduationElements: SVGTextElement[] = [];\r\n\r\n\r\n\r\n        for (let i = 0; i < amount; i++) {\r\n            const elementPosition = highestPosition - i * this.props.valueSpacing;\r\n            const offset = -elementPosition * this.props.distanceSpacing / this.props.valueSpacing;\r\n    \r\n            let elementVal = highestValue - i * this.props.valueSpacing;\r\n            if (!this.showZero && elementVal === 0) {\r\n                elementVal = NaN;\r\n            }\r\n    \r\n             //graduationElements.push(this.props.elementFunction(elementVal, offset, this.color));\r\n \r\n             const digitRef = FSComponent.createRef<SVGTextElement>();\r\n\r\n            if(this.props.type === 'hundreds') {\r\n                graduationElements.push(<text ref={digitRef} transform={`translate(0 ${offset})`} class={`FontLargest MiddleAlign ${this.color}`} x=\"11.431\" y=\"7.1\"></text>);\r\n\r\n            } else if (this.props.type === 'thousands') {\r\n                graduationElements.push( <text ref={digitRef} transform={`translate(0 ${offset})`} class={`FontLargest MiddleAlign ${this.color}`} x=\"6.98\" y=\"7.1\"></text>);\r\n            }\r\n\r\n            else if (this.props.type === 'ten-thousands') {\r\n                graduationElements.push( <text ref={digitRef} transform={`translate(0 ${offset})`} class={`FontLargest MiddleAlign ${this.color}`} x=\"2.298\" y=\"7.1\"></text>);\r\n            } \r\n            else if (this.props.type === 'tens') {\r\n                graduationElements.push( <text ref={digitRef} transform={`translate(0 ${offset})`} class={`FontSmallest MiddleAlign ${this.color}`} x=\"4.3894\" y=\"8.9133\"></text>);\r\n            }\r\n            this.digitRefElements.push(digitRef);\r\n        }\r\n    \r\n        return graduationElements;\r\n\r\n\r\n    }\r\n\r\n\r\n   /*  private getAttributes() {\r\n        const numTicks = Math.round(this.props.displayRange * 2 / this.props.valueSpacing);\r\n\r\n        let highestPosition = Math.round((this.position + this.props.displayRange) / this.props.valueSpacing) * this.props.valueSpacing;\r\n        if (highestPosition > this.position + this.props.displayRange) {\r\n            highestPosition -= this.props.valueSpacing;\r\n        }\r\n    \r\n        let highestValue = Math.round((this.value + this.props.displayRange) / this.props.valueSpacing) * this.props.valueSpacing;\r\n        if (highestValue > this.value + this.props.displayRange) {\r\n            highestValue -= this.props.valueSpacing;\r\n        }\r\n        \r\n        \r\n    } */\r\n\r\n    private getOffset(position: number) {\r\n\r\n        const className =`translate(0 ${position * this.props.distanceSpacing / this.props.valueSpacing})`;\r\n\r\n        this.gRef.instance.setAttribute('transform', className);\r\n\r\n    }\r\n\r\n    private updateValue() {\r\n\r\n\r\n        let highestPosition = Math.round((this.position + this.props.displayRange) / this.props.valueSpacing) * this.props.valueSpacing;\r\n        if (highestPosition > this.position + this.props.displayRange) {\r\n            highestPosition -= this.props.valueSpacing;\r\n        }\r\n\r\n\r\n        let highestValue = Math.round((this.value + this.props.displayRange) / this.props.valueSpacing) * this.props.valueSpacing;\r\n        if (highestValue > this.value + this.props.displayRange) {\r\n            highestValue -= this.props.valueSpacing;\r\n        }\r\n\r\n\r\n        for (let i = 0; i < this.props.amount; i++) {\r\n    \r\n            let elementVal = highestValue - i * this.props.valueSpacing;\r\n            const elementPosition = highestPosition - i * this.props.valueSpacing;  \r\n            const offset = -elementPosition * this.props.distanceSpacing / this.props.valueSpacing;\r\n            if (!this.showZero && elementVal === 0) {\r\n                elementVal = NaN;\r\n            }\r\n    \r\n    \r\n            let text;        \r\n \r\n  \r\n\r\n            text = this.props.getText(elementVal);\r\n \r\n          /*   if(offset > 130 && offset > 40) {\r\n                this.digitRefElements[i].instance.textContent = text;\r\n                this.digitRefElements[i].instance.setAttribute('transform', `translate(0 ${offset})`);\r\n            } else {\r\n                if(offset <=130 && offset < 40) {\r\n                    this.digitRefElements[i].instance.textContent = text;\r\n                    this.digitRefElements[i].instance.setAttribute('transform', `translate(0 ${offset})`);\r\n                }\r\n            } */\r\n\r\n         \r\n\r\n            this.digitRefElements[i].instance.setAttribute('transform', `translate(0 ${offset})`);\r\n            this.digitRefElements[i].instance.textContent = text;\r\n            this.digitRefElements[i].instance.classList.replace('Green', this.color);\r\n            this.digitRefElements[i].instance.classList.replace('Amber', this.color);\r\n\r\n        }\r\n    \r\n\r\n    }\r\n\r\n\r\n    private position = 0;\r\n    private value = 0;\r\n    private color = 'Green'\r\n    private showZero = true;\r\n\r\n    private gRef = FSComponent.createRef<SVGGElement>();\r\n\r\n    onAfterRender(node: VNode): void {\r\n        super.onAfterRender(node);\r\n  \r\n    \r\n\r\n        this.props.position.sub(p => {\r\n            this.position = p;\r\n           // this.getOffset();\r\n           //this.updateValue();\r\n           this.getOffset(p);\r\n           //this.updateValue();\r\n\r\n        });\r\n        this.props.value.sub(p => {\r\n            this.value = p;\r\n            this.updateValue();\r\n            //this.getOffset(this.position);\r\n\r\n           \r\n\r\n\r\n        });\r\n        this.props.color.sub(p => {\r\n\r\n            this.color = p;\r\n        });\r\n        this.props.showZero.sub(p => {\r\n\r\n            this.showZero = p;\r\n        });\r\n    }\r\n\r\n    render(): VNode  {\r\n\r\n       \r\n        \r\n    return (\r\n        <g ref={this.gRef}>\r\n           {this.buildElements(this.props.amount)}\r\n        </g>\r\n    );\r\n    }\r\n  \r\n\r\n};\r\n"]}