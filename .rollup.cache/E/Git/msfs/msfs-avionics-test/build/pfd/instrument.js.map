{"version":3,"file":"instrument.js","sourceRoot":"","sources":["../../pfd/instrument.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FSComponent } from \"msfssdk\";\r\nimport { EventBus } from \"msfssdk/data\";\r\nimport { PFDComponent } from \"./components\";\r\nimport { AdirsValueProvider } from \"./shared/AdirsValueProvider\";\r\nimport { PFDSimvarPublisher } from \"./shared/PFDSimvarPublisher\";\r\n\r\nimport './style.scss';\r\n\r\n\r\nclass A32NX_PFD extends BaseInstrument {\r\n \r\n    private bus: EventBus;\r\n    private simVarPublisher: PFDSimvarPublisher;\r\n\r\n    constructor() {\r\n        super();\r\n        this.bus = new EventBus();\r\n        this.simVarPublisher = new PFDSimvarPublisher(this.bus);\r\n    }\r\n\r\n    get templateID(): string {\r\n        return 'A32NX_PFD';\r\n    }\r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n\r\n        this.simVarPublisher.subscribe('elec');\r\n        this.simVarPublisher.subscribe('coldDark');\r\n        this.simVarPublisher.subscribe('potentiometer_captain');\r\n        this.simVarPublisher.subscribe('pitch');\r\n        this.simVarPublisher.subscribe('roll');\r\n        this.simVarPublisher.subscribe('heading');\r\n        this.simVarPublisher.subscribe('altitude');\r\n        this.simVarPublisher.subscribe('speed');\r\n        this.simVarPublisher.subscribe('alpha_prot');\r\n        this.simVarPublisher.subscribe('onGround');\r\n        this.simVarPublisher.subscribe('activeLateralMode');\r\n        this.simVarPublisher.subscribe('activeVerticalMode');\r\n        this.simVarPublisher.subscribe('fma_mode_reversion');\r\n        this.simVarPublisher.subscribe('fma_speed_protection');\r\n        this.simVarPublisher.subscribe('AThrMode');\r\n        this.simVarPublisher.subscribe('ap_vs_selected');\r\n        this.simVarPublisher.subscribe('radio_alt');\r\n        this.simVarPublisher.subscribe('approachCapability');\r\n        this.simVarPublisher.subscribe('ap1Active');\r\n        this.simVarPublisher.subscribe('ap2Active');\r\n        this.simVarPublisher.subscribe('fmaVerticalArmed');\r\n        this.simVarPublisher.subscribe('fmaLateralArmed');\r\n        this.simVarPublisher.subscribe('fd1Active');\r\n        this.simVarPublisher.subscribe('fd2Active');\r\n        this.simVarPublisher.subscribe('athrStatus');\r\n        this.simVarPublisher.subscribe('athrModeMessage');\r\n        this.simVarPublisher.subscribe('machPreselVal');\r\n        this.simVarPublisher.subscribe('speedPreselVal');\r\n        this.simVarPublisher.subscribe('mda');\r\n        this.simVarPublisher.subscribe('dh');\r\n        this.simVarPublisher.subscribe('attHdgKnob');\r\n        this.simVarPublisher.subscribe('airKnob');\r\n        this.simVarPublisher.subscribe('vs_baro');\r\n        this.simVarPublisher.subscribe('vs_inert');\r\n        this.simVarPublisher.subscribe('sideStickY');\r\n        this.simVarPublisher.subscribe('sideStickX');\r\n        this.simVarPublisher.subscribe('fdYawCommand');\r\n        this.simVarPublisher.subscribe('fdBank');\r\n        this.simVarPublisher.subscribe('fdPitch');\r\n\r\n\r\n\r\n        this.simVarPublisher.startPublish();\r\n\r\n        new AdirsValueProvider(this.bus, this.simVarPublisher);\r\n\r\n\r\n        FSComponent.render(<PFDComponent bus={this.bus} instrument={this} />, document.getElementById('PFD_CONTENT'));\r\n    }\r\n\r\n      /**\r\n   * A callback called when the instrument gets a frame update.\r\n   */\r\n  public Update(): void {\r\n    super.Update();\r\n\r\n    this.simVarPublisher.onUpdate();\r\n  }\r\n\r\n\r\n}\r\n\r\nregisterInstrument('a32nx-pfd', A32NX_PFD);\r\n"]}