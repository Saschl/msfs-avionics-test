{"version":3,"file":"PFDSimvarPublisher.js","sourceRoot":"","sources":["../../../pfd/shared/PFDSimvarPublisher.tsx"],"names":[],"mappings":"AACA,OAAO,EAAoB,eAAe,EAAE,MAAM,cAAc,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAiDpD,MAAM,CAAN,IAAY,OA2CX;AA3CD,WAAY,OAAO;IACjB,mDAAwC,CAAA;IACxC,sDAA2C,CAAA;IAC3C,2DAA+C,CAAA;IAC/C,6CAAkC,CAAA;IAClC,2CAAgC,CAAA;IAChC,iDAAsC,CAAA;IACtC,oDAAyC,CAAA;IACzC,0DAA+C,CAAA;IAC/C,yDAA8C,CAAA;IAC9C,qCAA0B,CAAA;IAC1B,yDAA8C,CAAA;IAC9C,2DAAgD,CAAA;IAChD,4DAAiD,CAAA;IACjD,qEAA0D,CAAA;IAC1D,+CAAoC,CAAA;IACpC,2DAAgD,CAAA;IAChD,wDAA6C,CAAA;IAC7C,4DAAiD,CAAA;IACjD,mDAAwC,CAAA;IACxC,mDAAwC,CAAA;IACxC,0DAA+C,CAAA;IAC/C,wDAA6C,CAAA;IAC7C,2DAAgD,CAAA;IAChD,2DAAgD,CAAA;IAChD,mDAAwC,CAAA;IACxC,8DAAmD,CAAA;IACnD,kDAAuC,CAAA;IACvC,oDAAyC,CAAA;IACzC,sDAA2C,CAAA;IAC3C,4CAAiC,CAAA;IACjC,wDAA6C,CAAA;IAC7C,sDAA2C,CAAA;IAC3C,oEAAyD,CAAA;IACzD,yDAA8C,CAAA;IAC9C,sDAA2C,CAAA;IAC3C,sDAA2C,CAAA;IAC3C,uDAA4C,CAAA;IAC5C,kDAAuC,CAAA;IACvC,oDAAyC,CAAA;IACzC,qCAA0B,CAAA;IAC1B,mDAAwC,CAAA;AAE1C,CAAC,EA3CW,OAAO,KAAP,OAAO,QA2ClB;AAGH,uDAAuD;AACvD,MAAM,OAAO,kBAAmB,SAAQ,eAA2B;IA+C/D;;;OAGG;IACH,YAAmB,GAAa;QAC9B,KAAK,CAAC,kBAAkB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC;;AApDc,0BAAO,GAAG,IAAI,GAAG,CAAqC;IACnE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAE,CAAC;IACtE,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAE,CAAC;IAC5D,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,qBAAqB,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IAC/F,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IAC/D,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IAC7D,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACnE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACrE,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IAC/D,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACrE,CAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,iBAAiB,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACvF,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,kBAAkB,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzF,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,kBAAkB,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzF,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,oBAAoB,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IAC7F,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACrE,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,cAAc,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACjF,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACrE,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,kBAAkB,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzF,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACrE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACrE,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,gBAAgB,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACrF,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACnF,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACrE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACrE,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzE,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACnF,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IAC/E,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,cAAc,EAAE,IAAI,EAAE,eAAe,CAAC,KAAK,EAAC,CAAC;IAChF,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACzD,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACvD,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACvE,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,IAAI,EAAC,CAAC;IACjE,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACnE,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACpE,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzE,CAAC,YAAY,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzE,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,YAAY,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IAC7E,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACjE,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACnE,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;IACzD,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,eAAe,CAAC,MAAM,EAAC,CAAC;CAG5E,CAAC,CAAA","sourcesContent":["import { EventBus } from \"msfssdk/data\";\r\nimport { SimVarDefinition, SimVarValueType } from \"msfssdk/data\";\r\nimport { SimVarPublisher } from \"msfssdk/instruments\";\r\nimport { Arinc429Word } from \"./arinc429\";\r\n\r\n\r\n  export interface PFDSimvars {\r\n    coldDark: number,\r\n    elec: number,\r\n    potentiometer_captain: number;\r\n    pitch: number;\r\n    roll: number;\r\n    heading: number;\r\n    altitude: number;\r\n    speed: number;\r\n    alpha_prot: number;\r\n    onGround: number;\r\n    activeLateralMode: number;\r\n    activeVerticalMode: number;\r\n    fma_mode_reversion: number;\r\n    fma_speed_protection: number;\r\n    AThrMode: number;\r\n    ap_vs_selected: number;\r\n    radio_alt: number;\r\n    approachCapability: number;\r\n    ap1Active: boolean;\r\n    ap2Active: boolean;\r\n    fmaVerticalArmed: number;\r\n    fmaLateralArmed: number;\r\n    fd1Active: boolean;\r\n    fd2Active: boolean;\r\n    athrStatus: number;\r\n    athrModeMessage: number;\r\n    machPreselVal: number;\r\n    speedPreselVal: number;\r\n    mda: number;\r\n    dh: number;\r\n    attHdgKnob: number;\r\n    airKnob: number;\r\n    vs_baro: number;\r\n    vs_inert: number;\r\n    sideStickX: number,\r\n    sideStickY: number,\r\n    fdYawCommand: number,\r\n    fdBank: number,\r\n    fdPitch: number,\r\n    v1: number,\r\n    flightPhase: number,\r\n  }\r\n  \r\n  \r\n  export enum PFDVars {\r\n    ColdDark = 'L:A32NX_COLD_AND_DARK_SPAWN',\r\n    elec = 'L:A32NX_ELEC_AC_ESS_BUS_IS_POWERED',\r\n    potentiometer_captain= 'LIGHT POTENTIOMETER:88',\r\n    pitch = 'L:A32NX_ADIRS_IR_1_PITCH',\r\n    roll = 'L:A32NX_ADIRS_IR_1_ROLL',\r\n    heading = 'L:A32NX_ADIRS_IR_1_HEADING',\r\n    altitude = 'L:A32NX_ADIRS_ADR_1_ALTITUDE',\r\n    speed = 'L:A32NX_ADIRS_ADR_1_COMPUTED_AIRSPEED',\r\n    alpha_prot = 'L:A32NX_SPEEDS_ALPHA_PROTECTION',\r\n    onGround = 'SIM ON GROUND',\r\n    activeLateralMode = 'L:A32NX_FMA_LATERAL_MODE',\r\n    activeVerticalMode = 'L:A32NX_FMA_VERTICAL_MODE',\r\n    fma_mode_reversion = 'L:A32NX_FMA_MODE_REVERSION',\r\n    fma_speed_protection = 'L:A32NX_FMA_SPEED_PROTECTION_MODE',\r\n    AThrMode = 'L:A32NX_AUTOTHRUST_MODE',\r\n    ap_vs_selected = 'L:A32NX_AUTOPILOT_VS_SELECTED',\r\n    radio_alt = 'PLANE ALT ABOVE GROUND MINUS CG',\r\n    approachCapability = 'L:A32NX_ApproachCapability',\r\n    ap1Active = 'L:A32NX_AUTOPILOT_1_ACTIVE',\r\n    ap2Active = 'L:A32NX_AUTOPILOT_2_ACTIVE',\r\n    fmaVerticalArmed = 'L:A32NX_FMA_VERTICAL_ARMED',\r\n    fmaLateralArmed = 'L:A32NX_FMA_LATERAL_ARMED',\r\n    fd1Active = 'AUTOPILOT FLIGHT DIRECTOR ACTIVE:1',\r\n    fd2Active = 'AUTOPILOT FLIGHT DIRECTOR ACTIVE:2',\r\n    athrStatus = 'L:A32NX_AUTOTHRUST_STATUS',\r\n    athrModeMessage = 'L:A32NX_AUTOTHRUST_MODE_MESSAGE',\r\n    machPreselVal = 'L:A32NX_MachPreselVal',\r\n    speedPreselVal = 'L:A32NX_SpeedPreselVal',\r\n    mda = 'L:AIRLINER_MINIMUM_DESCENT_ALTITUDE',\r\n    dh = 'L:AIRLINER_DECISION_HEIGHT',\r\n    attHdgKnob = 'L:A32NX_ATT_HDG_SWITCHING_KNOB',\r\n    airKnob = 'L:A32NX_AIR_DATA_SWITCHING_KNOB',\r\n    vs_baro = 'L:A32NX_ADIRS_ADR_1_BAROMETRIC_VERTICAL_SPEED',\r\n    vs_inert = 'L:A32NX_ADIRS_IR_1_VERTICAL_SPEED',\r\n    sideStickX = 'L:A32NX_SIDESTICK_POSITION_X',\r\n    sideStickY = 'L:A32NX_SIDESTICK_POSITION_Y',\r\n    fdYawCommand = 'L:A32NX_FLIGHT_DIRECTOR_YAW',\r\n    fdBank = 'L:A32NX_FLIGHT_DIRECTOR_BANK',\r\n    fdPitch = 'L:A32NX_FLIGHT_DIRECTOR_PITCH',\r\n    v1 = 'L:AIRLINER_V1_SPEED',\r\n    flightPhase = 'L:A32NX_FWC_FLIGHT_PHASE',\r\n\r\n  }\r\n  \r\n\r\n/** A publisher to poll and publish nav/com simvars. */\r\nexport class PFDSimvarPublisher extends SimVarPublisher<PFDSimvars> {\r\n    private static simvars = new Map<keyof PFDSimvars, SimVarDefinition>([\r\n      ['coldDark', { name: PFDVars.ColdDark, type: SimVarValueType.Number }],\r\n      ['elec', { name: PFDVars.elec, type: SimVarValueType.Bool }],\r\n      ['potentiometer_captain', { name: PFDVars.potentiometer_captain, type: SimVarValueType.Number}],\r\n      ['pitch', { name: PFDVars.pitch, type: SimVarValueType.Number}],\r\n      ['roll', { name: PFDVars.roll, type: SimVarValueType.Number}],\r\n      ['heading', { name: PFDVars.heading, type: SimVarValueType.Number}],\r\n      ['altitude', { name: PFDVars.altitude, type: SimVarValueType.Number}],\r\n      ['speed', { name: PFDVars.speed, type: SimVarValueType.Number}],\r\n      ['alpha_prot', { name: PFDVars.alpha_prot, type: SimVarValueType.Number}],\r\n      ['onGround', { name: PFDVars.onGround, type: SimVarValueType.Number}],\r\n      ['activeLateralMode', { name: PFDVars.activeLateralMode, type: SimVarValueType.Number}],\r\n      ['activeVerticalMode', { name: PFDVars.activeVerticalMode, type: SimVarValueType.Number}],\r\n      ['fma_mode_reversion', { name: PFDVars.fma_mode_reversion, type: SimVarValueType.Number}],\r\n      ['fma_speed_protection', { name: PFDVars.fma_speed_protection, type: SimVarValueType.Number}],\r\n      ['AThrMode', { name: PFDVars.AThrMode, type: SimVarValueType.Number}],\r\n      ['ap_vs_selected', { name: PFDVars.ap_vs_selected, type: SimVarValueType.Number}],\r\n      ['radio_alt', { name: PFDVars.radio_alt, type: SimVarValueType.Feet}],\r\n      ['approachCapability', { name: PFDVars.approachCapability, type: SimVarValueType.Number}],\r\n      ['ap1Active', { name: PFDVars.ap1Active, type: SimVarValueType.Bool}],\r\n      ['ap2Active', { name: PFDVars.ap2Active, type: SimVarValueType.Bool}],\r\n      ['fmaVerticalArmed', { name: PFDVars.fmaVerticalArmed, type: SimVarValueType.Number}],\r\n      ['fmaLateralArmed', { name: PFDVars.fmaLateralArmed, type: SimVarValueType.Number}],\r\n      ['fd1Active', { name: PFDVars.fd1Active, type: SimVarValueType.Bool}],\r\n      ['fd2Active', { name: PFDVars.fd2Active, type: SimVarValueType.Bool}],\r\n      ['athrStatus', { name: PFDVars.athrStatus, type: SimVarValueType.Number}],\r\n      ['athrModeMessage', { name: PFDVars.athrModeMessage, type: SimVarValueType.Number}],\r\n      ['machPreselVal', { name: PFDVars.machPreselVal, type: SimVarValueType.Number}],\r\n      ['speedPreselVal', { name: PFDVars.speedPreselVal, type: SimVarValueType.Knots}],\r\n      ['mda', { name: PFDVars.mda, type: SimVarValueType.Feet}],\r\n      ['dh', { name: PFDVars.dh, type: SimVarValueType.Feet}],\r\n      ['attHdgKnob', { name: PFDVars.attHdgKnob, type: SimVarValueType.Enum}],\r\n      ['airKnob', { name: PFDVars.airKnob, type: SimVarValueType.Enum}],\r\n      ['vs_baro', { name: PFDVars.vs_baro, type: SimVarValueType.Number}],\r\n      ['vs_inert', { name: PFDVars.vs_baro, type: SimVarValueType.Number}],\r\n      ['sideStickX', { name: PFDVars.sideStickX, type: SimVarValueType.Number}],\r\n      ['sideStickY', { name: PFDVars.sideStickY, type: SimVarValueType.Number}],\r\n      ['fdYawCommand', { name: PFDVars.fdYawCommand, type: SimVarValueType.Number}],\r\n      ['fdBank', { name: PFDVars.fdBank, type: SimVarValueType.Number}],\r\n      ['fdPitch', { name: PFDVars.fdPitch, type: SimVarValueType.Number}],\r\n      ['v1', { name: PFDVars.v1, type: SimVarValueType.Number}],\r\n      ['flightPhase', { name: PFDVars.flightPhase, type: SimVarValueType.Number}],\r\n\r\n\r\n    ])\r\n  \r\n    /**\r\n     * Create a NavComSimVarPublisher\r\n     * @param bus The EventBus to publish to\r\n     */\r\n    public constructor(bus: EventBus) {\r\n      super(PFDSimvarPublisher.simvars, bus);\r\n    }\r\n  }\r\n\r\n\r\n"]}