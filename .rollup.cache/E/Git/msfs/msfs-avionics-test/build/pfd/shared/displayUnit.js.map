{"version":3,"file":"displayUnit.js","sourceRoot":"","sources":["../../../pfd/shared/displayUnit.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ConsumerSubject, DisplayComponent, EventBus, FSComponent, Subject, Subscribable, VNode } from 'msfssdk';\r\n\r\nimport './common.scss';\r\n\r\nimport { PFDSimvarPublisher, PFDSimvars, PFDVars } from './PFDSimvarPublisher';\r\n\r\ntype DisplayUnitProps = {\r\n    //electricitySimvar: number\r\n    potentiometerIndex?: number\r\n    failed?: boolean,\r\n    coldDark?: boolean,\r\n    bus: EventBus,\r\n}\r\n\r\nenum DisplayUnitState {\r\n    On,\r\n    Off,\r\n    Selftest,\r\n    Standby\r\n}\r\n\r\nexport class DisplayUnit extends DisplayComponent<DisplayUnitProps> {\r\n\r\n    // FIXME obvious\r\n    private state: Subject<DisplayUnitState> = Subject.create<DisplayUnitState>(DisplayUnitState.Off);// this.props.coldDark ? DisplayUnitState.Off : DisplayUnitState.Standby;\r\n    //const [timer, setTimer] = useState<number | null>(null);\r\n\r\n    //const [potentiometer] = useSimVar(`LIGHT POTENTIOMETER:${this.props.potentiometerIndex}`, 'percent over 100', 200);\r\n\r\n    private readonly simvarPublisher;\r\n\r\n    private electricityState: number = 0;\r\n\r\n    private potentiometer: number = 0;\r\n\r\n    private timeOut: number = 0;\r\n\r\n    private readonly selfTestRef = FSComponent.createRef<SVGElement>();\r\n    private readonly pfdRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n\r\n\r\n    constructor(props: DisplayUnitProps) {\r\n        super(props);\r\n        this.simvarPublisher =  this.props.bus.getSubscriber<PFDSimvars>();\r\n     \r\n\r\n\r\n\r\n    //const consumer = subscriber.on('elec');\r\n    //this.electricityState = ConsumerSubject.create(consumer, 0);\r\n\r\n}\r\n\r\npublic onAfterRender(node: VNode): void {\r\n    super.onAfterRender(node);\r\n\r\n    //this.updateState();\r\n\r\n    console.log(\"RENDER DONE\");\r\n\r\n    this.simvarPublisher.on('potentiometer_captain').whenChanged().handle(value => {\r\n        this.potentiometer = value;\r\n        this.updateState();\r\n    });\r\n    this.simvarPublisher.on('elec').whenChanged().handle(value => {\r\n\r\n        this.electricityState = value;\r\n        this.updateState();\r\n    } );\r\n\r\n    this.state.sub(v => {\r\n        if(v === DisplayUnitState.Selftest) {\r\n            this.selfTestRef.instance.setAttribute('visibility', 'visible');\r\n        } else {\r\n            this.selfTestRef.instance.setAttribute('visibility', 'hidden');\r\n            this.pfdRef.instance.setAttribute('visibility', 'visible');\r\n\r\n        }\r\n    })\r\n\r\n   \r\n} \r\n\r\n/*      useUpdate((deltaTime) => {\r\n        if (timer !== null) {\r\n            if (timer > 0) {\r\n                setTimer(timer - (deltaTime / 1000));\r\n            } else if (state === DisplayUnitState.Standby) {\r\n                setState(DisplayUnitState.Off);\r\n                setTimer(null);\r\n            } else if (state === DisplayUnitState.Selftest) {\r\n                setState(DisplayUnitState.On);\r\n                setTimer(null);\r\n            }\r\n        }\r\n    }); */\r\n    \r\n    setTimer(time: number)  {\r\n        console.log(\"setting timouet\");\r\n        this.timeOut =  window.setTimeout(() => {\r\n            console.log(\"firimng timouet\");\r\n\r\n            if(this.state.get() === DisplayUnitState.Standby) {\r\n                this.state.set(DisplayUnitState.Off);\r\n            \r\n            }if (this.state.get() === DisplayUnitState.Selftest) {\r\n                this.state.set(DisplayUnitState.On);\r\n            }\r\n        }, time*1000);\r\n    }\r\n\r\n\r\n     updateState() {\r\n        if (this.state.get() !== DisplayUnitState.Off && this.props.failed) {\r\n            this.state.set(DisplayUnitState.Off);\r\n        } else if (this.state.get() === DisplayUnitState.On && (this.potentiometer === 0 || this.electricityState === 0)) {\r\n            this.state.set(DisplayUnitState.Standby);\r\n           this.setTimer(10);\r\n        } else if (this.state.get() === DisplayUnitState.Standby && (this.potentiometer !== 0 && this.electricityState !== 0)) {\r\n            this.state.set(DisplayUnitState.On);\r\n           // setTimer(null);\r\n           clearTimeout(this.timeOut);\r\n        } else if (this.state.get() === DisplayUnitState.Off && (this.potentiometer !== 0 && this.electricityState !== 0 && !this.props.failed)) {\r\n            this.state.set(DisplayUnitState.Selftest);\r\n            this.setTimer(15);\r\n\r\n           // setTimer(parseInt(NXDataStore.get('CONFIG_SELF_TEST_TIME', '15')));\r\n        } else if (this.state.get() === DisplayUnitState.Selftest && (this.potentiometer === 0 || this.electricityState === 0)) {\r\n            this.state.set(DisplayUnitState.Off);\r\n            clearTimeout(this.timeOut);\r\n        }\r\n        console.log(this.state);      \r\n\r\n       \r\n\r\n     }\r\n\r\n\r\n    render(): VNode {\r\n             return (\r\n\r\n                <>       \r\n             <div class=\"BacklightBleed\" />\r\n               \r\n                    <svg ref={this.selfTestRef} class=\"SelfTest\" viewBox=\"0 0 600 600\">\r\n                        <rect class=\"SelfTestBackground\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\r\n    \r\n                        <text\r\n                            class=\"SelfTestText\"\r\n                            x=\"50%\"\r\n                            y=\"50%\"\r\n                        >\r\n                            SELF TEST IN PROGRESS\r\n                        </text>\r\n                        <text\r\n                            class=\"SelfTestText\"\r\n                            x=\"50%\"\r\n                            y=\"56%\"\r\n                        >\r\n                            (MAX 40 SECONDS)\r\n                        </text>\r\n                    </svg>\r\n                  \r\n              \r\n                    <div style='block' ref={this.pfdRef} visibility='hidden'>{this.props.children}</div>\r\n                    </>\r\n              \r\n            ); \r\n\r\n         /*    return ( \r\n            <svg class=\"dcdu-lines\">\r\n            <g>\r\n                <path d=\"m 21 236 h 450\" />\r\n                <path d=\"m 130 246 v 124\" />\r\n                <path d=\"m 362 246 v 124\" />\r\n            </g>\r\n        </svg>); */\r\n        }\r\n      \r\n    \r\n\r\n\r\n  \r\n};\r\n"]}